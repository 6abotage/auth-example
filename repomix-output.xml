This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
apps/
  auth-server/
    auth/
      index.ts
    .gitignore
    package.json
    README.md
    tsconfig.json
  frontend/
    public/
      vite.svg
    src/
      assets/
        react.svg
      App.css
      App.tsx
      index.css
      main.tsx
      vite-env.d.ts
    .gitignore
    eslint.config.js
    index.html
    package.json
    README.md
    tsconfig.app.json
    tsconfig.json
    tsconfig.node.json
    vite.config.ts
packages/
  database/
    dist/
      index.d.ts
      index.js
      index.js.map
      migrate.d.ts
      migrate.js
      migrate.js.map
      schema.d.ts
      schema.js
      schema.js.map
    migrations/
      meta/
        _journal.json
        0000_snapshot.json
      0000_past_ogun.sql
    src/
      index.ts
      migrate.ts
      schema.ts
    drizzle.config.ts
    package.json
    tsconfig.json
    tsconfig.tsbuildinfo
.gitignore
docker-compose.yml
package.json
README.md
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="packages/database/dist/index.d.ts">
import "dotenv/config";
import * as schemaDefs from "./schema.js";
export declare const db: import("drizzle-orm/node-postgres").NodePgDatabase<typeof schemaDefs>;
export declare const schema: typeof schemaDefs;
export declare function testDbConnection(): Promise<void>;
</file>

<file path="packages/database/dist/index.js">
import { drizzle } from "drizzle-orm/node-postgres";
import { Pool } from "pg";
import "dotenv/config"; // Load .env variables
// Assuming schema.ts is in the same directory
import * as schemaDefs from "./schema.js"; // Use .js extension
if (!process.env.DATABASE_URL) {
    // Consider throwing or having a default dev URL
    console.warn("DATABASE_URL environment variable not set. Using default development URL.");
    // Or throw new Error('DATABASE_URL environment variable is required');
}
// Use env var or a default (adjust default as needed)
const connectionString = process.env.DATABASE_URL ||
    "postgresql://drizzle_user:drizzle_password@localhost:5432/auth_db";
// Create a connection pool
const pool = new Pool({
    connectionString: connectionString,
    // ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : undefined,
});
// Create the Drizzle instance
// Logger can be configured based on an env var too, e.g., process.env.DB_LOGGING === 'true'
export const db = drizzle(pool, {
    schema: schemaDefs,
    logger: process.env.NODE_ENV !== "production",
});
// Export the schema definitions directly if needed by consumers
export const schema = schemaDefs;
// Optional: Function to test connection
export async function testDbConnection() {
    try {
        await pool.query("SELECT NOW()");
        console.log("Database connection successful!");
    }
    catch (error) {
        console.error("Database connection failed:", error);
        // Decide if failure here should halt the process
        // process.exit(1); // Maybe not ideal for a reusable package
        throw error; // Re-throw the error for the consumer to handle
    }
}
// Optional: Export the pool if consumers need direct access (less common)
// export { pool };
//# sourceMappingURL=index.js.map
</file>

<file path="packages/database/dist/index.js.map">
{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,IAAI,CAAC;AAC1B,OAAO,eAAe,CAAC,CAAC,sBAAsB;AAE9C,8CAA8C;AAC9C,OAAO,KAAK,UAAU,MAAM,aAAa,CAAC,CAAC,oBAAoB;AAE/D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC9B,gDAAgD;IAChD,OAAO,CAAC,IAAI,CACV,2EAA2E,CAC5E,CAAC;IACF,uEAAuE;AACzE,CAAC;AAED,sDAAsD;AACtD,MAAM,gBAAgB,GACpB,OAAO,CAAC,GAAG,CAAC,YAAY;IACxB,mEAAmE,CAAC;AAEtE,2BAA2B;AAC3B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC;IACpB,gBAAgB,EAAE,gBAAgB;IAClC,0FAA0F;CAC3F,CAAC,CAAC;AAEH,8BAA8B;AAC9B,4FAA4F;AAC5F,MAAM,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,EAAE;IAC9B,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;CAC9C,CAAC,CAAC;AAEH,gEAAgE;AAChE,MAAM,CAAC,MAAM,MAAM,GAAG,UAAU,CAAC;AAEjC,wCAAwC;AACxC,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,IAAI,CAAC;QACH,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACjD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,iDAAiD;QACjD,6DAA6D;QAC7D,MAAM,KAAK,CAAC,CAAC,gDAAgD;IAC/D,CAAC;AACH,CAAC;AAED,0EAA0E;AAC1E,mBAAmB"}
</file>

<file path="packages/database/dist/migrate.d.ts">
import "dotenv/config";
</file>

<file path="packages/database/dist/migrate.js">
import { migrate } from "drizzle-orm/node-postgres/migrator";
import { drizzle } from "drizzle-orm/node-postgres";
import { Pool } from "pg";
import "dotenv/config";
import path from "path"; // Use path for robustness
import { fileURLToPath } from "url"; // To get __dirname in ESM
// Get directory name in ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
// Ensure DATABASE_URL is set
if (!process.env.DATABASE_URL) {
    throw new Error("DATABASE_URL environment variable is required for migration");
}
// Construct the path to the migrations folder relative to this script
const migrationsPath = path.join(__dirname, "..", "migrations"); // Go up one level from src to find migrations/
async function runMigrations() {
    console.log("Starting database migration from package...");
    console.log(`Looking for migrations in: ${migrationsPath}`);
    const migrationPool = new Pool({
        connectionString: process.env.DATABASE_URL,
        max: 1,
    });
    try {
        const db = drizzle(migrationPool);
        await migrate(db, { migrationsFolder: migrationsPath }); // Use the calculated path
        console.log("Migrations applied successfully!");
    }
    catch (error) {
        console.error("Migration failed:", error);
        process.exit(1);
    }
    finally {
        await migrationPool.end();
        console.log("Migration connection closed.");
    }
}
runMigrations();
//# sourceMappingURL=migrate.js.map
</file>

<file path="packages/database/dist/migrate.js.map">
{"version":3,"file":"migrate.js","sourceRoot":"","sources":["../src/migrate.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AAC7D,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,IAAI,CAAC;AAC1B,OAAO,eAAe,CAAC;AACvB,OAAO,IAAI,MAAM,MAAM,CAAC,CAAC,0BAA0B;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,KAAK,CAAC,CAAC,0BAA0B;AAE/D,4BAA4B;AAC5B,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAE3C,6BAA6B;AAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;IAC9B,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;AACJ,CAAC;AAED,sEAAsE;AACtE,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,+CAA+C;AAEhH,KAAK,UAAU,aAAa;IAC1B,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;IAC3D,OAAO,CAAC,GAAG,CAAC,8BAA8B,cAAc,EAAE,CAAC,CAAC;IAE5D,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC;QAC7B,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;QAC1C,GAAG,EAAE,CAAC;KACP,CAAC,CAAC;IAEH,IAAI,CAAC;QACH,MAAM,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;QAClC,MAAM,OAAO,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC,0BAA0B;QACnF,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;IAClD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;YAAS,CAAC;QACT,MAAM,aAAa,CAAC,GAAG,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC9C,CAAC;AACH,CAAC;AAED,aAAa,EAAE,CAAC"}
</file>

<file path="packages/database/dist/schema.d.ts">
export declare const users: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "users";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
        email: import("drizzle-orm/pg-core").PgColumn<{
            name: "email";
            tableName: "users";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "users";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
</file>

<file path="packages/database/dist/schema.js">
import { pgTable, text, timestamp, } from "drizzle-orm/pg-core";
import { sql } from "drizzle-orm";
import crypto from "crypto"; // Node.js crypto module for UUID generation
export const users = pgTable("users", {
    // Use text for ID and generate UUID in the application to match original logic
    id: text("id")
        .primaryKey()
        .$defaultFn(() => crypto.randomUUID()),
    email: text("email").notNull().unique(), // Ensure email is unique
    createdAt: timestamp("created_at")
        .default(sql `now()`)
        .notNull(),
});
// Optional: Explicitly define the unique index if needed elsewhere,
// although .unique() on the column definition often suffices.
// export const usersEmailIdx = uniqueIndex('users_email_idx').on(users.email);
// You could add more tables here later (e.g., sessions, accounts)
//# sourceMappingURL=schema.js.map
</file>

<file path="packages/database/dist/schema.js.map">
{"version":3,"file":"schema.js","sourceRoot":"","sources":["../src/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EAEP,IAAI,EACJ,SAAS,GAEV,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAC;AAClC,OAAO,MAAM,MAAM,QAAQ,CAAC,CAAC,4CAA4C;AAEzE,MAAM,CAAC,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,EAAE;IACpC,+EAA+E;IAC/E,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;SACX,UAAU,EAAE;SACZ,UAAU,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IACxC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE,yBAAyB;IAClE,SAAS,EAAE,SAAS,CAAC,YAAY,CAAC;SAC/B,OAAO,CAAC,GAAG,CAAA,OAAO,CAAC;SACnB,OAAO,EAAE;CACb,CAAC,CAAC;AAEH,oEAAoE;AACpE,8DAA8D;AAC9D,+EAA+E;AAE/E,kEAAkE"}
</file>

<file path="packages/database/migrations/meta/_journal.json">
{
  "version": "7",
  "dialect": "postgresql",
  "entries": [
    {
      "idx": 0,
      "version": "7",
      "when": 1743287073930,
      "tag": "0000_past_ogun",
      "breakpoints": true
    }
  ]
}
</file>

<file path="packages/database/migrations/meta/0000_snapshot.json">
{
  "id": "174f24db-627c-4b2a-9f8d-56c1d8d1c248",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
</file>

<file path="packages/database/migrations/0000_past_ogun.sql">
CREATE TABLE IF NOT EXISTS "users" (
	"id" text PRIMARY KEY NOT NULL,
	"email" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "users_email_unique" UNIQUE("email")
);
</file>

<file path="packages/database/src/index.ts">
import { drizzle } from "drizzle-orm/node-postgres";
import { Pool } from "pg";
import "dotenv/config"; // Load .env variables

// Assuming schema.ts is in the same directory
import * as schemaDefs from "./schema.js"; // Use .js extension

if (!process.env.DATABASE_URL) {
  // Consider throwing or having a default dev URL
  console.warn(
    "DATABASE_URL environment variable not set. Using default development URL."
  );
  // Or throw new Error('DATABASE_URL environment variable is required');
}

// Use env var or a default (adjust default as needed)
const connectionString =
  process.env.DATABASE_URL ||
  "postgresql://drizzle_user:drizzle_password@localhost:5432/auth_db";

// Create a connection pool
const pool = new Pool({
  connectionString: connectionString,
  // ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : undefined,
});

// Create the Drizzle instance
// Logger can be configured based on an env var too, e.g., process.env.DB_LOGGING === 'true'
export const db = drizzle(pool, {
  schema: schemaDefs,
  logger: process.env.NODE_ENV !== "production",
});

// Export the schema definitions directly if needed by consumers
export const schema = schemaDefs;

// Optional: Function to test connection
export async function testDbConnection() {
  try {
    await pool.query("SELECT NOW()");
    console.log("Database connection successful!");
  } catch (error) {
    console.error("Database connection failed:", error);
    // Decide if failure here should halt the process
    // process.exit(1); // Maybe not ideal for a reusable package
    throw error; // Re-throw the error for the consumer to handle
  }
}

// Optional: Export the pool if consumers need direct access (less common)
// export { pool };
</file>

<file path="packages/database/src/migrate.ts">
import { migrate } from "drizzle-orm/node-postgres/migrator";
import { drizzle } from "drizzle-orm/node-postgres";
import { Pool } from "pg";
import "dotenv/config";
import path from "path"; // Use path for robustness
import { fileURLToPath } from "url"; // To get __dirname in ESM

// Get directory name in ESM
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Ensure DATABASE_URL is set
if (!process.env.DATABASE_URL) {
  throw new Error(
    "DATABASE_URL environment variable is required for migration"
  );
}

// Construct the path to the migrations folder relative to this script
const migrationsPath = path.join(__dirname, "..", "migrations"); // Go up one level from src to find migrations/

async function runMigrations() {
  console.log("Starting database migration from package...");
  console.log(`Looking for migrations in: ${migrationsPath}`);

  const migrationPool = new Pool({
    connectionString: process.env.DATABASE_URL,
    max: 1,
  });

  try {
    const db = drizzle(migrationPool);
    await migrate(db, { migrationsFolder: migrationsPath }); // Use the calculated path
    console.log("Migrations applied successfully!");
  } catch (error) {
    console.error("Migration failed:", error);
    process.exit(1);
  } finally {
    await migrationPool.end();
    console.log("Migration connection closed.");
  }
}

runMigrations();
</file>

<file path="packages/database/src/schema.ts">
import {
  pgTable,
  serial,
  text,
  timestamp,
  uniqueIndex,
} from "drizzle-orm/pg-core";
import { sql } from "drizzle-orm";
import crypto from "crypto"; // Node.js crypto module for UUID generation

export const users = pgTable("users", {
  // Use text for ID and generate UUID in the application to match original logic
  id: text("id")
    .primaryKey()
    .$defaultFn(() => crypto.randomUUID()),
  email: text("email").notNull().unique(), // Ensure email is unique
  createdAt: timestamp("created_at")
    .default(sql`now()`)
    .notNull(),
});

// Optional: Explicitly define the unique index if needed elsewhere,
// although .unique() on the column definition often suffices.
// export const usersEmailIdx = uniqueIndex('users_email_idx').on(users.email);

// You could add more tables here later (e.g., sessions, accounts)
</file>

<file path="packages/database/drizzle.config.ts">
import { defineConfig } from "drizzle-kit";
import "dotenv/config"; // Load .env variables

if (!process.env.DATABASE_URL) {
  throw new Error("DATABASE_URL environment variable is required");
}

export default defineConfig({
  dialect: "postgresql",
  schema: "./src/schema.ts", // Path relative to this config file
  out: "./migrations", // Output directory relative to this config file
  dbCredentials: {
    url: process.env.DATABASE_URL,
  },
  verbose: true,
});
</file>

<file path="packages/database/package.json">
{
  "name": "@auth-monorepo/database",
  "version": "1.0.0",
  "private": true, 
  "type": "module",
  "main": "./dist/index.js", 
  "types": "./dist/index.d.ts", 
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js" 
    },
    "./schema": {
      "types": "./dist/schema.d.ts",
      "import": "./dist/schema.js" 
    }
  },
  "scripts": {
    "build": "tsc", 
    "dev": "tsc -w", 
    "db:generate": "drizzle-kit generate",
    "db:migrate": "bun run src/migrate.ts", 
    "db:studio": "drizzle-kit studio"
  },
  "dependencies": {
    "dotenv": "^16.4.5",
    "drizzle-orm": "^0.32.1",
    "pg": "^8.12.0"
  },
  "devDependencies": {
    "@types/pg": "^8.11.10",
    "drizzle-kit": "^0.24.1",
    "typescript": "^5.5.4" 
  },
  "peerDependencies": {
    "typescript": "^5"
  }
}
</file>

<file path="packages/database/tsconfig.json">
{
  "compilerOptions": {
    "target": "ESNext",
    "module": "ESNext",
    "lib": ["ESNext"],
    "moduleResolution": "node",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "outDir": "./dist",
    "rootDir": "./src",
    "declaration": true,
    "sourceMap": true,
    "composite": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"]
    }
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}
</file>

<file path="packages/database/tsconfig.tsbuildinfo">
{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.es2021.d.ts","../../node_modules/typescript/lib/lib.es2022.d.ts","../../node_modules/typescript/lib/lib.es2023.d.ts","../../node_modules/typescript/lib/lib.es2024.d.ts","../../node_modules/typescript/lib/lib.esnext.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2016.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2017.date.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.es2021.promise.d.ts","../../node_modules/typescript/lib/lib.es2021.string.d.ts","../../node_modules/typescript/lib/lib.es2021.weakref.d.ts","../../node_modules/typescript/lib/lib.es2021.intl.d.ts","../../node_modules/typescript/lib/lib.es2022.array.d.ts","../../node_modules/typescript/lib/lib.es2022.error.d.ts","../../node_modules/typescript/lib/lib.es2022.intl.d.ts","../../node_modules/typescript/lib/lib.es2022.object.d.ts","../../node_modules/typescript/lib/lib.es2022.string.d.ts","../../node_modules/typescript/lib/lib.es2022.regexp.d.ts","../../node_modules/typescript/lib/lib.es2023.array.d.ts","../../node_modules/typescript/lib/lib.es2023.collection.d.ts","../../node_modules/typescript/lib/lib.es2023.intl.d.ts","../../node_modules/typescript/lib/lib.es2024.arraybuffer.d.ts","../../node_modules/typescript/lib/lib.es2024.collection.d.ts","../../node_modules/typescript/lib/lib.es2024.object.d.ts","../../node_modules/typescript/lib/lib.es2024.promise.d.ts","../../node_modules/typescript/lib/lib.es2024.regexp.d.ts","../../node_modules/typescript/lib/lib.es2024.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2024.string.d.ts","../../node_modules/typescript/lib/lib.esnext.array.d.ts","../../node_modules/typescript/lib/lib.esnext.collection.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.disposable.d.ts","../../node_modules/typescript/lib/lib.esnext.promise.d.ts","../../node_modules/typescript/lib/lib.esnext.decorators.d.ts","../../node_modules/typescript/lib/lib.esnext.iterator.d.ts","../../node_modules/typescript/lib/lib.esnext.float16.d.ts","../../node_modules/typescript/lib/lib.decorators.d.ts","../../node_modules/typescript/lib/lib.decorators.legacy.d.ts","../../node_modules/drizzle-orm/entity.d.ts","../../node_modules/drizzle-orm/logger.d.ts","../../node_modules/drizzle-orm/migrator.d.ts","../../node_modules/drizzle-orm/utils.d.ts","../../node_modules/drizzle-orm/table.d.ts","../../node_modules/drizzle-orm/operations.d.ts","../../node_modules/drizzle-orm/subquery.d.ts","../../node_modules/drizzle-orm/sql/sql.d.ts","../../node_modules/drizzle-orm/column.d.ts","../../node_modules/drizzle-orm/mysql-core/checks.d.ts","../../node_modules/drizzle-orm/mysql-core/indexes.d.ts","../../node_modules/drizzle-orm/mysql-core/primary-keys.d.ts","../../node_modules/drizzle-orm/mysql-core/unique-constraint.d.ts","../../node_modules/drizzle-orm/mysql-core/table.d.ts","../../node_modules/drizzle-orm/mysql-core/foreign-keys.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/common.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/bigint.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/binary.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/boolean.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/char.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/custom.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/date.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/datetime.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/decimal.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/double.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/enum.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/float.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/int.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/json.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/mediumint.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/real.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/serial.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/smallint.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/text.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/time.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/date.common.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/timestamp.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/tinyint.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/varbinary.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/varchar.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/year.d.ts","../../node_modules/drizzle-orm/mysql-core/columns/index.d.ts","../../node_modules/drizzle-orm/sql/expressions/conditions.d.ts","../../node_modules/drizzle-orm/sql/expressions/select.d.ts","../../node_modules/drizzle-orm/sql/expressions/index.d.ts","../../node_modules/drizzle-orm/sql/functions/aggregate.d.ts","../../node_modules/drizzle-orm/relations.d.ts","../../node_modules/drizzle-orm/alias.d.ts","../../node_modules/drizzle-orm/errors.d.ts","../../node_modules/drizzle-orm/expressions.d.ts","../../node_modules/drizzle-orm/query-promise.d.ts","../../node_modules/drizzle-orm/view-common.d.ts","../../node_modules/drizzle-orm/index.d.ts","../../node_modules/drizzle-orm/sql/functions/vector.d.ts","../../node_modules/drizzle-orm/sql/functions/index.d.ts","../../node_modules/drizzle-orm/sql/index.d.ts","../../node_modules/drizzle-orm/query-builders/query-builder.d.ts","../../node_modules/drizzle-orm/query-builders/select.types.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/delete.d.ts","../../node_modules/drizzle-orm/runnable-query.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/update.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/insert.d.ts","../../node_modules/drizzle-orm/mysql-core/dialect.d.ts","../../node_modules/drizzle-orm/mysql-core/subquery.d.ts","../../node_modules/drizzle-orm/mysql-core/view-base.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/select.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/query-builder.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/index.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/query.d.ts","../../node_modules/drizzle-orm/mysql-core/db.d.ts","../../node_modules/drizzle-orm/mysql-core/session.d.ts","../../node_modules/drizzle-orm/mysql-core/view-common.d.ts","../../node_modules/drizzle-orm/mysql-core/view.d.ts","../../node_modules/drizzle-orm/mysql-core/query-builders/select.types.d.ts","../../node_modules/drizzle-orm/mysql-core/alias.d.ts","../../node_modules/drizzle-orm/mysql-core/schema.d.ts","../../node_modules/drizzle-orm/mysql-core/utils.d.ts","../../node_modules/drizzle-orm/mysql-core/index.d.ts","../../node_modules/drizzle-orm/pg-core/checks.d.ts","../../node_modules/drizzle-orm/pg-core/foreign-keys.d.ts","../../node_modules/drizzle-orm/pg-core/indexes.d.ts","../../node_modules/drizzle-orm/pg-core/columns/common.d.ts","../../node_modules/drizzle-orm/pg-core/primary-keys.d.ts","../../node_modules/drizzle-orm/pg-core/unique-constraint.d.ts","../../node_modules/drizzle-orm/pg-core/table.d.ts","../../node_modules/drizzle-orm/pg-core/view-base.d.ts","../../node_modules/drizzle-orm/pg-core/subquery.d.ts","../../node_modules/drizzle-orm/session.d.ts","../../node_modules/drizzle-orm/pg-core/session.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/select.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/query-builder.d.ts","../../node_modules/drizzle-orm/pg-core/view-common.d.ts","../../node_modules/drizzle-orm/pg-core/view.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/select.types.d.ts","../../node_modules/drizzle-orm/pg-core/alias.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/delete.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/update.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/refresh-materialized-view.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/index.d.ts","../../node_modules/drizzle-orm/pg-core/columns/enum.d.ts","../../node_modules/drizzle-orm/pg-core/sequence.d.ts","../../node_modules/drizzle-orm/pg-core/schema.d.ts","../../node_modules/drizzle-orm/pg-core/utils.d.ts","../../node_modules/drizzle-orm/pg-core/utils/array.d.ts","../../node_modules/drizzle-orm/pg-core/utils/index.d.ts","../../node_modules/drizzle-orm/pg-core/index.d.ts","../../node_modules/@types/node/compatibility/disposable.d.ts","../../node_modules/@types/node/compatibility/indexable.d.ts","../../node_modules/@types/node/compatibility/iterators.d.ts","../../node_modules/@types/node/compatibility/index.d.ts","../../node_modules/@types/node/globals.typedarray.d.ts","../../node_modules/@types/node/buffer.buffer.d.ts","../../node_modules/undici-types/header.d.ts","../../node_modules/undici-types/readable.d.ts","../../node_modules/undici-types/file.d.ts","../../node_modules/undici-types/fetch.d.ts","../../node_modules/undici-types/formdata.d.ts","../../node_modules/undici-types/connector.d.ts","../../node_modules/undici-types/client.d.ts","../../node_modules/undici-types/errors.d.ts","../../node_modules/undici-types/dispatcher.d.ts","../../node_modules/undici-types/global-dispatcher.d.ts","../../node_modules/undici-types/global-origin.d.ts","../../node_modules/undici-types/pool-stats.d.ts","../../node_modules/undici-types/pool.d.ts","../../node_modules/undici-types/handlers.d.ts","../../node_modules/undici-types/balanced-pool.d.ts","../../node_modules/undici-types/agent.d.ts","../../node_modules/undici-types/mock-interceptor.d.ts","../../node_modules/undici-types/mock-agent.d.ts","../../node_modules/undici-types/mock-client.d.ts","../../node_modules/undici-types/mock-pool.d.ts","../../node_modules/undici-types/mock-errors.d.ts","../../node_modules/undici-types/proxy-agent.d.ts","../../node_modules/undici-types/env-http-proxy-agent.d.ts","../../node_modules/undici-types/retry-handler.d.ts","../../node_modules/undici-types/retry-agent.d.ts","../../node_modules/undici-types/api.d.ts","../../node_modules/undici-types/interceptors.d.ts","../../node_modules/undici-types/util.d.ts","../../node_modules/undici-types/cookies.d.ts","../../node_modules/undici-types/patch.d.ts","../../node_modules/undici-types/websocket.d.ts","../../node_modules/undici-types/eventsource.d.ts","../../node_modules/undici-types/filereader.d.ts","../../node_modules/undici-types/diagnostics-channel.d.ts","../../node_modules/undici-types/content-type.d.ts","../../node_modules/undici-types/cache.d.ts","../../node_modules/undici-types/index.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/sea.d.ts","../../node_modules/@types/node/sqlite.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/ws/index.d.ts","../../node_modules/bun-types/globals.d.ts","../../node_modules/bun-types/s3.d.ts","../../node_modules/bun-types/fetch.d.ts","../../node_modules/bun-types/bun.d.ts","../../node_modules/@types/bun/index.d.ts","../../node_modules/bun-types/extensions.d.ts","../../node_modules/bun-types/devserver.d.ts","../../node_modules/bun-types/ffi.d.ts","../../node_modules/bun-types/html-rewriter.d.ts","../../node_modules/bun-types/jsc.d.ts","../../node_modules/bun-types/sqlite.d.ts","../../node_modules/bun-types/test.d.ts","../../node_modules/bun-types/wasm.d.ts","../../node_modules/bun-types/overrides.d.ts","../../node_modules/bun-types/deprecated.d.ts","../../node_modules/bun-types/bun.ns.d.ts","../../node_modules/bun-types/index.d.ts","../../node_modules/drizzle-orm/sqlite-core/checks.d.ts","../../node_modules/drizzle-orm/sqlite-core/indexes.d.ts","../../node_modules/drizzle-orm/sqlite-core/primary-keys.d.ts","../../node_modules/drizzle-orm/sqlite-core/unique-constraint.d.ts","../../node_modules/drizzle-orm/sqlite-core/table.d.ts","../../node_modules/drizzle-orm/sqlite-core/foreign-keys.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/common.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/blob.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/custom.d.ts","../../node_modules/drizzle-orm/sqlite-core/subquery.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/query.d.ts","../../node_modules/drizzle-orm/sqlite-core/db.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/raw.d.ts","../../node_modules/drizzle-orm/sqlite-core/session.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/delete.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/update.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/insert.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/index.d.ts","../../node_modules/drizzle-orm/sqlite-core/dialect.d.ts","../../node_modules/drizzle-orm/sqlite-core/view-base.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/select.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/query-builder.d.ts","../../node_modules/drizzle-orm/sqlite-core/view.d.ts","../../node_modules/drizzle-orm/sqlite-core/utils.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/integer.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/numeric.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/real.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/text.d.ts","../../node_modules/drizzle-orm/sqlite-core/columns/index.d.ts","../../node_modules/drizzle-orm/sqlite-core/query-builders/select.types.d.ts","../../node_modules/drizzle-orm/sqlite-core/alias.d.ts","../../node_modules/drizzle-orm/sqlite-core/index.d.ts","../../node_modules/drizzle-orm/column-builder.d.ts","../../node_modules/drizzle-orm/pg-core/columns/int.common.d.ts","../../node_modules/drizzle-orm/pg-core/columns/bigint.d.ts","../../node_modules/drizzle-orm/pg-core/columns/bigserial.d.ts","../../node_modules/drizzle-orm/pg-core/columns/boolean.d.ts","../../node_modules/drizzle-orm/pg-core/columns/char.d.ts","../../node_modules/drizzle-orm/pg-core/columns/cidr.d.ts","../../node_modules/drizzle-orm/pg-core/columns/custom.d.ts","../../node_modules/drizzle-orm/pg-core/columns/date.common.d.ts","../../node_modules/drizzle-orm/pg-core/columns/date.d.ts","../../node_modules/drizzle-orm/pg-core/columns/double-precision.d.ts","../../node_modules/drizzle-orm/pg-core/columns/inet.d.ts","../../node_modules/drizzle-orm/pg-core/columns/integer.d.ts","../../node_modules/drizzle-orm/pg-core/columns/timestamp.d.ts","../../node_modules/drizzle-orm/pg-core/columns/interval.d.ts","../../node_modules/drizzle-orm/pg-core/columns/json.d.ts","../../node_modules/drizzle-orm/pg-core/columns/jsonb.d.ts","../../node_modules/drizzle-orm/pg-core/columns/line.d.ts","../../node_modules/drizzle-orm/pg-core/columns/macaddr.d.ts","../../node_modules/drizzle-orm/pg-core/columns/macaddr8.d.ts","../../node_modules/drizzle-orm/pg-core/columns/numeric.d.ts","../../node_modules/drizzle-orm/pg-core/columns/point.d.ts","../../node_modules/drizzle-orm/pg-core/columns/postgis_extension/geometry.d.ts","../../node_modules/drizzle-orm/pg-core/columns/real.d.ts","../../node_modules/drizzle-orm/pg-core/columns/serial.d.ts","../../node_modules/drizzle-orm/pg-core/columns/smallint.d.ts","../../node_modules/drizzle-orm/pg-core/columns/smallserial.d.ts","../../node_modules/drizzle-orm/pg-core/columns/text.d.ts","../../node_modules/drizzle-orm/pg-core/columns/time.d.ts","../../node_modules/drizzle-orm/pg-core/columns/uuid.d.ts","../../node_modules/drizzle-orm/pg-core/columns/varchar.d.ts","../../node_modules/drizzle-orm/pg-core/columns/vector_extension/bit.d.ts","../../node_modules/drizzle-orm/pg-core/columns/vector_extension/halfvec.d.ts","../../node_modules/drizzle-orm/pg-core/columns/vector_extension/sparsevec.d.ts","../../node_modules/drizzle-orm/pg-core/columns/vector_extension/vector.d.ts","../../node_modules/drizzle-orm/pg-core/columns/index.d.ts","../../node_modules/drizzle-orm/pg-core/dialect.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/query.d.ts","../../node_modules/drizzle-orm/pg-core/query-builders/raw.d.ts","../../node_modules/drizzle-orm/pg-core/db.d.ts","../../node_modules/pg-types/index.d.ts","../../node_modules/pg-protocol/dist/messages.d.ts","../../node_modules/pg-protocol/dist/serializer.d.ts","../../node_modules/pg-protocol/dist/parser.d.ts","../../node_modules/pg-protocol/dist/index.d.ts","../../node_modules/@types/pg/index.d.ts","../../node_modules/drizzle-orm/node-postgres/session.d.ts","../../node_modules/drizzle-orm/node-postgres/driver.d.ts","../../node_modules/drizzle-orm/node-postgres/index.d.ts","../../node_modules/dotenv/config.d.ts","./src/schema.ts","./src/index.ts","../../node_modules/drizzle-orm/node-postgres/migrator.d.ts","./src/migrate.ts","../../node_modules/@babel/types/lib/index.d.ts","../../node_modules/@types/babel__generator/index.d.ts","../../node_modules/@babel/parser/typings/babel-parser.d.ts","../../node_modules/@types/babel__template/index.d.ts","../../node_modules/@types/babel__traverse/index.d.ts","../../node_modules/@types/babel__core/index.d.ts","../../node_modules/@types/estree/index.d.ts","../../node_modules/@types/json-schema/index.d.ts","../../node_modules/@types/react/global.d.ts","../../node_modules/csstype/index.d.ts","../../node_modules/@types/react/index.d.ts","../../node_modules/@types/react-dom/index.d.ts"],"fileIdsList":[[191,233,285,286,287,288,291,297,299,388],[191,233,285,286,287,288,291,297,299],[191,233,285,286,287,288,291,297,299,388,389,390,391,392],[191,233,285,286,287,288,291,297,299,388,390],[191,233,285,286,287,288,291,297,299,301],[191,230,233,285,286,287,288,291,297,299],[191,232,233,285,286,287,288,291,297,299],[233,285,286,287,288,291,297,299],[191,233,238,268,285,286,287,288,291,297,299],[191,233,234,239,245,246,253,265,276,285,286,287,288,291,297,299],[191,233,234,235,245,253,285,286,287,288,291,297,299],[186,187,188,191,233,285,286,287,288,291,297,299],[191,233,236,277,285,286,287,288,291,297,299],[191,233,237,238,246,254,285,286,287,288,291,297,299],[191,233,238,265,273,285,286,287,288,291,297,299],[191,233,239,241,245,253,285,286,287,288,291,297,299],[191,232,233,240,285,286,287,288,291,297,299],[191,233,241,242,285,286,287,288,291,297,299],[191,233,245,285,286,287,288,291,297,299],[191,233,243,245,285,286,287,288,291,297,299],[191,232,233,245,285,286,287,288,291,297,299],[191,233,245,246,247,265,276,285,286,287,288,291,297,299],[191,233,245,246,247,260,265,268,285,286,287,288,291,297,298,299],[191,228,233,281,285,286,287,288,291,297,299],[191,228,233,241,245,248,253,265,276,285,286,287,288,291,297,299],[191,233,245,246,248,249,253,265,273,276,285,286,287,288,291,297,299],[191,233,248,250,265,273,276,285,286,287,288,291,297,299],[189,190,191,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,285,286,287,288,291,297,299],[191,233,245,251,285,286,287,288,291,297,299],[191,233,252,276,285,286,287,288,291,297,299],[191,233,241,245,253,265,285,286,287,288,291,297,299],[191,233,254,285,286,287,288,291,297,299],[191,233,255,285,286,287,288,291,297,299],[191,232,233,256,285,286,287,288,291,297,299],[191,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,285,286,287,288,291,297,298,299],[191,233,258,285,286,287,288,291,297,299],[191,233,259,285,286,287,288,291,297,299],[191,233,245,260,261,285,286,287,288,291,297,299],[191,233,260,262,277,279,285,286,287,288,291,297,299],[191,233,245,265,266,268,285,286,287,288,291,297,299],[191,233,267,268,285,286,287,288,291,297,299],[191,233,265,266,285,286,287,288,291,297,299],[191,233,268,285,286,287,288,291,297,299],[191,233,269,285,286,287,288,291,297,299],[191,230,233,265,285,286,287,288,291,297,299],[191,233,245,271,272,285,286,287,288,291,297,299],[191,233,271,272,285,286,287,288,291,297,299],[191,233,238,253,265,273,285,286,287,288,291,297,298,299],[191,233,274,285,286,287,288,291,297,299],[191,233,253,275,285,286,287,288,291,297,299],[191,233,248,259,276,285,286,287,288,291,297,299],[191,233,238,277,285,286,287,288,291,297,299],[191,233,265,278,285,286,287,288,291,297,299],[191,233,252,279,285,286,287,288,291,297,299],[191,233,280,285,286,287,288,291,297,299],[191,233,238,245,247,256,265,276,279,281,285,286,287,288,291,297,299],[191,233,265,282,285,286,287,288,291,297,299],[191,233,245,265,273,283,285,286,287,288,291,297,298,299,374,375,378,379],[191,233,285,286,287,288,291,297,299,398],[191,233,285,286,287,288,291,297,299,396,397],[191,233,245,248,250,253,265,273,276,282,283,285,286,287,288,291,297,298,299],[191,228,233,238,246,273,277,281,285,286,287,291,292,297,298,299],[191,233,285,286,287,288,291,297],[191,233,285,286,287,288,297,299],[191,228,233,285,286,288,291,297,299],[191,233,238,256,265,268,273,277,281,284,286,287,288,291,297,299],[191,233,283,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300],[191,233,238,246,247,254,273,282,285,286,287,288,291,297,299],[191,233,246,285,287,288,291,297,299],[191,233,285,286,287,288,291,299],[79,83,86,87,125,191,233,285,286,287,288,291,297,299],[79,82,86,87,156,185,191,233,285,286,287,288,291,297,299,333],[79,82,83,86,191,233,285,286,287,288,291,297,299,334],[79,191,233,285,286,287,288,291,297,299],[123,191,233,285,286,287,288,291,297,299],[79,80,82,83,84,85,87,125,126,127,128,129,130,134,191,233,285,286,287,288,291,297,299,334],[92,143,152,191,233,285,286,287,288,291,297,299],[79,86,92,191,233,285,286,287,288,291,297,299],[79,87,94,191,233,285,286,287,288,291,297,299,334],[79,82,87,94,191,233,285,286,287,288,291,297,299,334],[79,82,86,87,92,93,191,233,285,286,287,288,291,297,299,334],[79,82,86,87,92,94,191,233,285,286,287,288,291,297,299,334],[79,82,87,92,94,191,233,285,286,287,288,291,297,299,334],[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,191,233,285,286,287,288,291,297,299],[79,87,94,106,191,233,285,286,287,288,291,297,299,334],[79,82,87,114,191,233,285,286,287,288,291,297,299,334],[79,82,85,86,92,125,135,141,142,146,147,149,152,191,233,285,286,287,288,291,297,299],[79,81,82,86,92,94,125,137,139,140,149,152,191,233,285,286,287,288,291,297,299],[79,92,120,191,233,285,286,287,288,291,297,299],[88,89,90,91,92,93,120,141,142,146,148,149,150,151,153,154,155,191,233,285,286,287,288,291,297,299],[79,86,92,120,191,233,285,286,287,288,291,297,299],[79,85,86,92,129,141,149,152,191,233,285,286,287,288,291,297,299],[137,139,140,144,145,152,191,233,285,286,287,288,291,297,299],[79,83,86,92,94,129,138,139,141,149,152,191,233,285,286,287,288,291,297,299],[79,85,86,135,142,144,152,191,233,285,286,287,288,291,297,299],[79,82,86,92,125,129,141,149,191,233,285,286,287,288,291,297,299],[79,82,85,86,92,120,129,135,136,141,142,143,149,152,191,233,285,286,287,288,291,297,299],[82,83,84,85,86,92,120,135,136,143,144,149,151,191,233,285,286,287,288,291,297,299],[79,82,85,86,87,92,129,141,149,152,191,233,285,286,287,288,291,297,299],[79,92,151,191,233,285,286,287,288,291,297,299],[79,82,86,125,141,148,152,191,233,285,286,287,288,291,297,299],[85,86,136,191,233,285,286,287,288,291,297,299],[79,83,88,89,90,91,93,94,191,233,285,286,287,288,291,297,299,334],[83,84,87,88,89,90,91,92,93,131,151,156,191,233,285,286,287,288,291,297,299,334],[79,86,191,233,285,286,287,288,291,297,299],[79,86,120,135,136,143,145,150,152,191,233,285,286,287,288,291,297,299,334],[79,80,82,125,191,233,285,286,287,288,291,297,299,370,373,380],[191,233,285,286,287,288,291,297,299,380,381],[81,191,233,285,286,287,288,291,297,299,381],[79,80,82,86,125,167,172,185,191,233,285,286,287,288,291,297,299,370,379],[83,86,87,191,233,285,286,287,288,291,297,299],[163,164,172,191,233,285,286,287,288,291,297,299],[79,134,163,191,233,285,286,287,288,291,297,299],[79,87,160,191,233,285,286,287,288,291,297,299,334,335],[79,87,160,191,233,285,286,287,288,291,297,299,334],[79,82,87,160,191,233,285,286,287,288,291,297,299,334],[79,82,87,131,158,159,163,191,233,285,286,287,288,291,297,299,334],[79,82,86,87,160,163,191,233,285,286,287,288,291,297,299,334],[79,160,191,233,285,286,287,288,291,297,299,334],[79,87,160,191,233,285,286,287,288,291,297,299,334,342],[79,82,87,160,163,191,233,285,286,287,288,291,297,299,334],[160,179,191,233,285,286,287,288,291,297,299,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368],[79,160,180,191,233,285,286,287,288,291,297,299,334],[79,87,160,191,233,285,286,287,288,291,297,299,334,347],[79,87,160,163,191,233,285,286,287,288,291,297,299,334],[79,87,160,163,191,233,285,286,287,288,291,297,299,334,342,347],[79,82,87,160,163,191,233,285,286,287,288,291,297,299,334,342],[79,82,85,86,125,135,163,165,167,171,172,177,178,191,233,285,286,287,288,291,297,299,369,370,371,372],[79,81,82,86,125,163,167,171,172,178,191,233,285,286,287,288,291,297,299,369],[79,163,191,233,285,286,287,288,291,297,299,369],[157,158,159,161,162,163,165,167,170,171,173,178,180,181,182,184,191,233,285,286,287,288,291,297,299,369,370,373],[79,86,163,191,233,285,286,287,288,291,297,299,369],[79,85,86,129,136,138,163,167,172,191,233,285,286,287,288,291,297,299,370],[168,169,172,174,175,176,177,191,233,285,286,287,288,291,297,299],[79,85,86,129,136,138,159,163,167,172,175,191,233,285,286,287,288,291,297,299,370],[79,85,86,135,165,168,172,191,233,285,286,287,288,291,297,299,369],[79,82,86,125,129,138,163,167,191,233,285,286,287,288,291,297,299,370],[79,86,129,138,166,191,233,285,286,287,288,291,297,299],[79,86,129,138,167,171,191,233,285,286,287,288,291,297,299,370],[79,82,85,86,129,135,136,138,163,164,165,167,172,191,233,285,286,287,288,291,297,299,369,370],[82,83,84,85,86,135,136,163,164,167,168,171,191,233,285,286,287,288,291,297,299,369],[79,82,85,86,87,129,136,138,163,167,172,191,233,285,286,287,288,291,297,299,370],[79,86,163,171,179,180,191,233,285,286,287,288,291,297,299],[79,125,134,166,172,191,233,285,286,287,288,291,297,299,370,373],[79,83,157,158,159,160,161,162,191,233,285,286,287,288,291,297,299,334],[83,84,87,131,157,158,159,160,161,162,163,171,191,233,285,286,287,288,291,297,299,334,369],[183,191,233,285,286,287,288,291,297,299],[79,86,135,136,160,164,169,170,172,191,233,285,286,287,288,291,297,299,334],[79,134,191,233,285,286,287,288,291,297,299],[82,83,84,85,86,87,191,233,285,286,287,288,291,297,299,334],[79,82,83,86,87,121,123,191,233,285,286,287,288,291,297,299],[191,233,285,286,287,288,291,297,299,334],[131,191,233,285,286,287,288,291,297,299],[86,87,191,233,285,286,287,288,291,297,299],[121,122,191,233,285,286,287,288,291,297,299],[124,132,191,233,285,286,287,288,291,297,299],[86,131,135,191,233,285,286,287,288,291,297,299],[86,123,133,191,233,285,286,287,288,291,297,299],[79,83,84,85,87,191,233,285,286,287,288,291,297,299],[191,233,285,286,287,288,291,297,299,306,321,331],[79,86,191,233,285,286,287,288,291,297,299,306],[79,82,87,191,233,283,285,286,287,288,291,297,299,301,308,334],[79,82,86,87,191,233,285,286,287,288,291,297,299,306,307,334],[79,82,86,87,191,233,285,286,287,288,291,297,299,306,308,334],[191,233,285,286,287,288,291,297,299,308,309,310,326,327,328,329],[79,82,87,191,233,285,286,287,288,291,297,299,306,308,325,334],[79,87,191,233,285,286,287,288,291,297,299,308,334],[79,82,87,191,233,285,286,287,288,291,297,299,306,308,334],[79,82,85,86,125,135,191,233,285,286,287,288,291,297,299,306,311,312,315,319,320,331],[79,81,82,86,125,191,233,285,286,287,288,291,297,299,306,315,319,330,331],[79,191,233,285,286,287,288,291,297,299,306,330],[191,233,285,286,287,288,291,297,299,302,303,304,305,306,307,311,313,315,319,320,324,325,330,332],[79,86,191,233,285,286,287,288,291,297,299,306,330],[79,82,85,86,129,136,138,191,233,285,286,287,288,291,297,299,306,315,320,331],[191,233,285,286,287,288,291,297,299,316,317,318,322,323,331],[79,82,85,86,129,136,138,191,233,285,286,287,288,291,297,299,303,306,315,317,320,331],[79,85,86,135,191,233,285,286,287,288,291,297,299,311,322,331],[79,82,86,125,129,138,191,233,285,286,287,288,291,297,299,306,315,320],[79,129,131,138,166,191,233,285,286,287,288,291,297,299,320],[79,82,85,86,129,135,136,138,191,233,285,286,287,288,291,297,299,306,311,315,320,321,330,331],[82,83,84,85,86,135,136,191,233,285,286,287,288,291,297,299,306,315,321,322,324,330],[79,82,85,86,87,129,136,138,191,233,285,286,287,288,291,297,299,306,315,320,331],[79,86,125,129,166,191,233,285,286,287,288,291,297,299,313,314,320,331],[79,83,191,233,285,286,287,288,291,297,299,302,303,304,305,307,308,334],[79,191,233,285,286,287,288,291,297,299,306,308],[83,84,87,131,191,233,285,286,287,288,291,297,299,302,303,304,305,306,307,324,333],[79,86,135,136,191,233,285,286,287,288,291,297,299,308,321,323,331,334],[79,82,84,86,87,191,233,285,286,287,288,291,297,299],[80,83,86,87,191,233,285,286,287,288,291,297,299],[191,233,283,285,286,287,288,291,297,299,375,376,377],[191,233,283,285,286,287,288,291,297,299],[191,233,265,283,285,286,287,288,291,297,299,375],[191,200,204,233,276,285,286,287,288,291,297,299],[191,200,233,265,276,285,286,287,288,291,297,299],[191,195,233,285,286,287,288,291,297,299],[191,197,200,233,273,276,285,286,287,288,291,297,298,299],[191,233,253,273,285,286,287,288,291,297,298,299],[191,195,233,283,285,286,287,288,291,297,299],[191,197,200,233,253,276,285,286,287,288,291,297,299],[191,192,193,196,199,233,245,265,276,285,286,287,288,291,297,299],[191,200,207,233,285,286,287,288,291,297,299],[191,192,198,233,285,286,287,288,291,297,299],[191,200,221,222,233,285,286,287,288,291,297,299],[191,196,200,233,268,276,283,285,286,287,288,291,297,299],[191,221,233,283,285,286,287,288,291,297,299],[191,194,195,233,283,285,286,287,288,291,297,299],[191,200,233,285,286,287,288,291,297,299],[191,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,227,233,285,286,287,288,291,297,299],[191,200,215,233,285,286,287,288,291,297,299],[191,200,207,208,233,285,286,287,288,291,297,299],[191,198,200,208,209,233,285,286,287,288,291,297,299],[191,199,233,285,286,287,288,291,297,299],[191,192,195,200,233,285,286,287,288,291,297,299],[191,200,204,208,209,233,285,286,287,288,291,297,299],[191,204,233,285,286,287,288,291,297,299],[191,198,200,203,233,276,285,286,287,288,291,297,299],[191,192,197,200,207,233,285,286,287,288,291,297,299],[191,233,265,285,286,287,288,291,297,299],[191,195,200,221,233,281,283,285,286,287,288,291,297,299],[191,233,285,286,287,288,291,297,299,379,382,383,384],[191,233,255,276,285,286,287,288,291,297,299,379,382,383,386],[131,185,191,233,238,285,286,287,288,291,297,299]],"fileInfos":[{"version":"69684132aeb9b5642cbcd9e22dff7818ff0ee1aa831728af0ecf97d3364d5546","affectsGlobalScope":true,"impliedFormat":1},{"version":"45b7ab580deca34ae9729e97c13cfd999df04416a79116c3bfb483804f85ded4","impliedFormat":1},{"version":"3facaf05f0c5fc569c5649dd359892c98a85557e3e0c847964caeb67076f4d75","impliedFormat":1},{"version":"e44bb8bbac7f10ecc786703fe0a6a4b952189f908707980ba8f3c8975a760962","impliedFormat":1},{"version":"5e1c4c362065a6b95ff952c0eab010f04dcd2c3494e813b493ecfd4fcb9fc0d8","impliedFormat":1},{"version":"68d73b4a11549f9c0b7d352d10e91e5dca8faa3322bfb77b661839c42b1ddec7","impliedFormat":1},{"version":"5efce4fc3c29ea84e8928f97adec086e3dc876365e0982cc8479a07954a3efd4","impliedFormat":1},{"version":"feecb1be483ed332fad555aff858affd90a48ab19ba7272ee084704eb7167569","impliedFormat":1},{"version":"ee7bad0c15b58988daa84371e0b89d313b762ab83cb5b31b8a2d1162e8eb41c2","impliedFormat":1},{"version":"27bdc30a0e32783366a5abeda841bc22757c1797de8681bbe81fbc735eeb1c10","impliedFormat":1},{"version":"8fd575e12870e9944c7e1d62e1f5a73fcf23dd8d3a321f2a2c74c20d022283fe","impliedFormat":1},{"version":"8bf8b5e44e3c9c36f98e1007e8b7018c0f38d8adc07aecef42f5200114547c70","impliedFormat":1},{"version":"c57796738e7f83dbc4b8e65132f11a377649c00dd3eee333f672b8f0a6bea671","affectsGlobalScope":true,"impliedFormat":1},{"version":"dc2df20b1bcdc8c2d34af4926e2c3ab15ffe1160a63e58b7e09833f616efff44","affectsGlobalScope":true,"impliedFormat":1},{"version":"515d0b7b9bea2e31ea4ec968e9edd2c39d3eebf4a2d5cbd04e88639819ae3b71","affectsGlobalScope":true,"impliedFormat":1},{"version":"0559b1f683ac7505ae451f9a96ce4c3c92bdc71411651ca6ddb0e88baaaad6a3","affectsGlobalScope":true,"impliedFormat":1},{"version":"0dc1e7ceda9b8b9b455c3a2d67b0412feab00bd2f66656cd8850e8831b08b537","affectsGlobalScope":true,"impliedFormat":1},{"version":"ce691fb9e5c64efb9547083e4a34091bcbe5bdb41027e310ebba8f7d96a98671","affectsGlobalScope":true,"impliedFormat":1},{"version":"8d697a2a929a5fcb38b7a65594020fcef05ec1630804a33748829c5ff53640d0","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ff2a353abf8a80ee399af572debb8faab2d33ad38c4b4474cff7f26e7653b8d","affectsGlobalScope":true,"impliedFormat":1},{"version":"936e80ad36a2ee83fc3caf008e7c4c5afe45b3cf3d5c24408f039c1d47bdc1df","affectsGlobalScope":true,"impliedFormat":1},{"version":"d15bea3d62cbbdb9797079416b8ac375ae99162a7fba5de2c6c505446486ac0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"68d18b664c9d32a7336a70235958b8997ebc1c3b8505f4f1ae2b7e7753b87618","affectsGlobalScope":true,"impliedFormat":1},{"version":"eb3d66c8327153d8fa7dd03f9c58d351107fe824c79e9b56b462935176cdf12a","affectsGlobalScope":true,"impliedFormat":1},{"version":"38f0219c9e23c915ef9790ab1d680440d95419ad264816fa15009a8851e79119","affectsGlobalScope":true,"impliedFormat":1},{"version":"69ab18c3b76cd9b1be3d188eaf8bba06112ebbe2f47f6c322b5105a6fbc45a2e","affectsGlobalScope":true,"impliedFormat":1},{"version":"fef8cfad2e2dc5f5b3d97a6f4f2e92848eb1b88e897bb7318cef0e2820bceaab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2f11ff796926e0832f9ae148008138ad583bd181899ab7dd768a2666700b1893","affectsGlobalScope":true,"impliedFormat":1},{"version":"4de680d5bb41c17f7f68e0419412ca23c98d5749dcaaea1896172f06435891fc","affectsGlobalScope":true,"impliedFormat":1},{"version":"954296b30da6d508a104a3a0b5d96b76495c709785c1d11610908e63481ee667","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac9538681b19688c8eae65811b329d3744af679e0bdfa5d842d0e32524c73e1c","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a969edff4bd52585473d24995c5ef223f6652d6ef46193309b3921d65dd4376","affectsGlobalScope":true,"impliedFormat":1},{"version":"9e9fbd7030c440b33d021da145d3232984c8bb7916f277e8ffd3dc2e3eae2bdb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811ec78f7fefcabbda4bfa93b3eb67d9ae166ef95f9bff989d964061cbf81a0c","affectsGlobalScope":true,"impliedFormat":1},{"version":"717937616a17072082152a2ef351cb51f98802fb4b2fdabd32399843875974ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"d7e7d9b7b50e5f22c915b525acc5a49a7a6584cf8f62d0569e557c5cfc4b2ac2","affectsGlobalScope":true,"impliedFormat":1},{"version":"71c37f4c9543f31dfced6c7840e068c5a5aacb7b89111a4364b1d5276b852557","affectsGlobalScope":true,"impliedFormat":1},{"version":"576711e016cf4f1804676043e6a0a5414252560eb57de9faceee34d79798c850","affectsGlobalScope":true,"impliedFormat":1},{"version":"89c1b1281ba7b8a96efc676b11b264de7a8374c5ea1e6617f11880a13fc56dc6","affectsGlobalScope":true,"impliedFormat":1},{"version":"74f7fa2d027d5b33eb0471c8e82a6c87216223181ec31247c357a3e8e2fddc5b","affectsGlobalScope":true,"impliedFormat":1},{"version":"d6d7ae4d1f1f3772e2a3cde568ed08991a8ae34a080ff1151af28b7f798e22ca","affectsGlobalScope":true,"impliedFormat":1},{"version":"063600664504610fe3e99b717a1223f8b1900087fab0b4cad1496a114744f8df","affectsGlobalScope":true,"impliedFormat":1},{"version":"934019d7e3c81950f9a8426d093458b65d5aff2c7c1511233c0fd5b941e608ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"52ada8e0b6e0482b728070b7639ee42e83a9b1c22d205992756fe020fd9f4a47","affectsGlobalScope":true,"impliedFormat":1},{"version":"3bdefe1bfd4d6dee0e26f928f93ccc128f1b64d5d501ff4a8cf3c6371200e5e6","affectsGlobalScope":true,"impliedFormat":1},{"version":"59fb2c069260b4ba00b5643b907ef5d5341b167e7d1dbf58dfd895658bda2867","affectsGlobalScope":true,"impliedFormat":1},{"version":"639e512c0dfc3fad96a84caad71b8834d66329a1f28dc95e3946c9b58176c73a","affectsGlobalScope":true,"impliedFormat":1},{"version":"368af93f74c9c932edd84c58883e736c9e3d53cec1fe24c0b0ff451f529ceab1","affectsGlobalScope":true,"impliedFormat":1},{"version":"af3dd424cf267428f30ccfc376f47a2c0114546b55c44d8c0f1d57d841e28d74","affectsGlobalScope":true,"impliedFormat":1},{"version":"995c005ab91a498455ea8dfb63aa9f83fa2ea793c3d8aa344be4a1678d06d399","affectsGlobalScope":true,"impliedFormat":1},{"version":"959d36cddf5e7d572a65045b876f2956c973a586da58e5d26cde519184fd9b8a","affectsGlobalScope":true,"impliedFormat":1},{"version":"965f36eae237dd74e6cca203a43e9ca801ce38824ead814728a2807b1910117d","affectsGlobalScope":true,"impliedFormat":1},{"version":"3925a6c820dcb1a06506c90b1577db1fdbf7705d65b62b99dce4be75c637e26b","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a3d63ef2b853447ec4f749d3f368ce642264246e02911fcb1590d8c161b8005","affectsGlobalScope":true,"impliedFormat":1},{"version":"b5ce7a470bc3628408429040c4e3a53a27755022a32fd05e2cb694e7015386c7","affectsGlobalScope":true,"impliedFormat":1},{"version":"8444af78980e3b20b49324f4a16ba35024fef3ee069a0eb67616ea6ca821c47a","affectsGlobalScope":true,"impliedFormat":1},{"version":"3287d9d085fbd618c3971944b65b4be57859f5415f495b33a6adc994edd2f004","affectsGlobalScope":true,"impliedFormat":1},{"version":"b4b67b1a91182421f5df999988c690f14d813b9850b40acd06ed44691f6727ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"df83c2a6c73228b625b0beb6669c7ee2a09c914637e2d35170723ad49c0f5cd4","affectsGlobalScope":true,"impliedFormat":1},{"version":"436aaf437562f276ec2ddbee2f2cdedac7664c1e4c1d2c36839ddd582eeb3d0a","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e3c06ea092138bf9fa5e874a1fdbc9d54805d074bee1de31b99a11e2fec239d","affectsGlobalScope":true,"impliedFormat":1},{"version":"87dc0f382502f5bbce5129bdc0aea21e19a3abbc19259e0b43ae038a9fc4e326","affectsGlobalScope":true,"impliedFormat":1},{"version":"b1cb28af0c891c8c96b2d6b7be76bd394fddcfdb4709a20ba05a7c1605eea0f9","affectsGlobalScope":true,"impliedFormat":1},{"version":"2fef54945a13095fdb9b84f705f2b5994597640c46afeb2ce78352fab4cb3279","affectsGlobalScope":true,"impliedFormat":1},{"version":"ac77cb3e8c6d3565793eb90a8373ee8033146315a3dbead3bde8db5eaf5e5ec6","affectsGlobalScope":true,"impliedFormat":1},{"version":"56e4ed5aab5f5920980066a9409bfaf53e6d21d3f8d020c17e4de584d29600ad","affectsGlobalScope":true,"impliedFormat":1},{"version":"4ece9f17b3866cc077099c73f4983bddbcb1dc7ddb943227f1ec070f529dedd1","affectsGlobalScope":true,"impliedFormat":1},{"version":"0a6282c8827e4b9a95f4bf4f5c205673ada31b982f50572d27103df8ceb8013c","affectsGlobalScope":true,"impliedFormat":1},{"version":"1c9319a09485199c1f7b0498f2988d6d2249793ef67edda49d1e584746be9032","affectsGlobalScope":true,"impliedFormat":1},{"version":"e3a2a0cee0f03ffdde24d89660eba2685bfbdeae955a6c67e8c4c9fd28928eeb","affectsGlobalScope":true,"impliedFormat":1},{"version":"811c71eee4aa0ac5f7adf713323a5c41b0cf6c4e17367a34fbce379e12bbf0a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"51ad4c928303041605b4d7ae32e0c1ee387d43a24cd6f1ebf4a2699e1076d4fa","affectsGlobalScope":true,"impliedFormat":1},{"version":"60037901da1a425516449b9a20073aa03386cce92f7a1fd902d7602be3a7c2e9","affectsGlobalScope":true,"impliedFormat":1},{"version":"d4b1d2c51d058fc21ec2629fff7a76249dec2e36e12960ea056e3ef89174080f","affectsGlobalScope":true,"impliedFormat":1},{"version":"22adec94ef7047a6c9d1af3cb96be87a335908bf9ef386ae9fd50eeb37f44c47","affectsGlobalScope":true,"impliedFormat":1},{"version":"4245fee526a7d1754529d19227ecbf3be066ff79ebb6a380d78e41648f2f224d","affectsGlobalScope":true,"impliedFormat":1},{"version":"8e7f8264d0fb4c5339605a15daadb037bf238c10b654bb3eee14208f860a32ea","affectsGlobalScope":true,"impliedFormat":1},{"version":"782dec38049b92d4e85c1585fbea5474a219c6984a35b004963b00beb1aab538","affectsGlobalScope":true,"impliedFormat":1},{"version":"c6fe327c538417b8dd5b9bb32abcd7911534b10da3a4514f3445cdb28cf3abf2","impliedFormat":99},{"version":"0065cdb7ac9f5b19921632de63f888ec2cc11ad57f7fc868f44bf0faad2fce3e","impliedFormat":99},{"version":"28a694331cf66a751fc0b0ab004fafe2d65b0a5c1ffe026dd698f8fcd9f59d85","impliedFormat":99},{"version":"ec766fd392f8c4e92413109d60153e3fc537fc83dbafac7bc51863383eabc179","impliedFormat":99},{"version":"1e46a859f5858e89259a9d9b5eff64873a9cd1ff07813b97a6c2501369dbc787","impliedFormat":99},{"version":"db837f95d1d516db38a3d414253e91df645a47748e54de1ae5d7c8530aa4fdd0","impliedFormat":99},{"version":"015916d335054556670a8c67266c493ce792a2c23a530a6b430f1662a65b73a8","impliedFormat":99},{"version":"4f2caace49cf3dfdb38333a5835965bf75f6541b710575230ac7ec19d7493ac9","impliedFormat":99},{"version":"558252a1347b8f9f5cf283bda12ee866d60f0ca5ff1774d881311c3ff406bc52","impliedFormat":99},{"version":"4f97089fe15655ae448c9d005bb9a87cc4e599b155edc9e115738c87aa788464","impliedFormat":99},{"version":"bcab57f5fe8791f2576249dfcc21a688ecf2a5929348cfe94bf3eb152cff8205","impliedFormat":99},{"version":"b5428f35f4ebf7ea46652b0158181d9c709e40a0182e93034b291a9dc53718d8","impliedFormat":99},{"version":"ce3c2dcaa2fd59e3587e61c35e0be051ed28f0ed925049af607fab2ffc12849d","impliedFormat":99},{"version":"7d0504a01c73708695d3f79c5254b27533e3c8395047b1c91f080a61b08ef5fe","impliedFormat":99},{"version":"9839aa89e0711701138c9e0c97f437bc4b3eca0ac582ceffbf8414d1afe03804","impliedFormat":99},{"version":"b80858a2f26906d39ef75cef20d1419080b7c6b7c3776384d79787b0ac70e8c0","impliedFormat":99},{"version":"ba8251a3533c68f8b59d9f9cc92c17c48836665336227b60deb00a4519fdcf99","impliedFormat":99},{"version":"59626999bed623bb03626cf61849ee689695a2fd13685ca589144ea7a841dd2e","impliedFormat":99},{"version":"b3a1b79e88d080ff57e0a57b9f74cedb16b64291a460cde2762137a86cb90a4a","impliedFormat":99},{"version":"152989eab767d7b2ba4011144a26f77b6f53a48a733f26e287b1051c0b92cec7","impliedFormat":99},{"version":"78874733647abc03e56555b28d28b12725b34843993b25d62b8545d1e248af2d","impliedFormat":99},{"version":"86b131ecb3a31b294a216cc643a5b61ca7e731e388b886891e063078d5f97923","impliedFormat":99},{"version":"2df8a5042cb9a09d7a07a7e810f1e7679ef3bf3bab6b7a7e27989bdd9b93f8b9","impliedFormat":99},{"version":"03449f705a773af2cb4253c820a9807be5a695c9a79c215d117e796af4718356","impliedFormat":99},{"version":"d7fa3598438f6cfc3b201f89a13ca1f79f3b781549c255a709e2d75763d722b3","impliedFormat":99},{"version":"7407804301094e53f57a0934d78692a8dde6a6732120078d39ff9d490690866a","impliedFormat":99},{"version":"c13c562e9af78cdc56342f263912d7488ff787be4140492f25ea17ed81d83719","impliedFormat":99},{"version":"1a46aeaa9f4fcd0924449623fdafeea01465256e9b08fb15fbdef47ade8b6ea3","impliedFormat":99},{"version":"2a7cc09b609a30f116d7054607208307e526f3babf33acfaa23dd064873a2d41","impliedFormat":99},{"version":"946b00c05a514544bf931fb3def7fe2de7300422f1d8cd7a1db666502bd8cb1e","impliedFormat":99},{"version":"bd557cd15ef9455b8233efc8794808522559fc5ec1ce582ba5c1685cf7d18f50","impliedFormat":99},{"version":"3161156c9e602ba7777d13d7ab9a2cb2c0a66322030e919f2750047817e834b6","impliedFormat":99},{"version":"e82dd0db92f02cf8541c52e6721a3ca2c1d60b2714c4038b6a8dc032c1234aef","impliedFormat":99},{"version":"972ab8029795ee34a19c4eca1b6bb4715c6d8164a922306f944668cd1388de99","impliedFormat":99},{"version":"c12f4840590f3fdd1ce5355909d911b0949f6a65058f27100c308e4561a134c7","impliedFormat":99},{"version":"6dc0813d9091dfaed7d19df0c5a079ee72e0248ce5e412562c5633913900be25","impliedFormat":99},{"version":"6797dff3840532230cf2db316b461e2a57e000c2e54cd03ca25838a25202ccc6","impliedFormat":99},{"version":"383e23467d66a0ba6db20d3487d85b27368fd0ebd03357f35ced6af2ed6e7b00","impliedFormat":99},{"version":"e353d2d3debb8bfb5471faa5d07237d7c7e35118a678f23663a593dce3dd5bea","impliedFormat":99},{"version":"2e7987378e192413f2ec688f47ea43f2ea0d3040c0611e8108272d0a2881a5d9","impliedFormat":99},{"version":"4924031eb4a97aae144397cc390cb6c69e4399e017d254c3db718b5756a5d54d","impliedFormat":99},{"version":"3d3f189177511d1452e7095471e3e7854b8c44d94443485dc21f6599c2161921","impliedFormat":99},{"version":"7acf8d5c7c33754814020683d8bfa43664bf40e7280bc7a96543c279caf28202","impliedFormat":99},{"version":"043195af0b52aadd10713870dd60369df0377ed153104b26e6bac1213b19f63e","impliedFormat":99},{"version":"ad17a36132569045ab97c8e5badf8febb556011a8ed7b2776ff823967d6d5aca","impliedFormat":99},{"version":"698d2b22251dbbfc0735e2d6ed350addead9ad031fac48b8bb316e0103d865db","impliedFormat":99},{"version":"1c5042f8943e23f55a16c788558d2df6cc1d92fac933e71df516a1e114aa8c93","impliedFormat":99},{"version":"9d1352fbed9d30513e1306cfdbdfc07af8e9e950973a97417b081075c5ff8e1a","impliedFormat":99},{"version":"07603bb68d27ff41499e4ed871cde4f6b4bb519c389dcf25d7f0256dfaa56554","impliedFormat":99},{"version":"6139824680a34eba08979f2e21785a761870384a4df16c143b19288aced9c346","impliedFormat":99},{"version":"e2381c64702025b4d57b005e94ed0b994b5592488d76f1e5f67f59d1860ebb70","impliedFormat":99},{"version":"6bd4aa523d61e94da44cee0ee0f3b6c8d5f1a91ef0bd9e8a8cf14530b0a1a6df","impliedFormat":99},{"version":"6b6e2508f79513e01386273e63d0fc3617613d80a5aca950a2b0fc33d90ad0b4","impliedFormat":99},{"version":"34efc2dcd88f95f5e2e081982795b3415e270046835fe2ba6f6b1fdfd17fee58","impliedFormat":99},{"version":"97b1cf4599cc3bc2e84b997aa1af60d91ca489d96bea0e20aaff0e52a5504b29","impliedFormat":99},{"version":"853dfbcd0999d3edc6be547d83dc0e0d75bf44530365b9583e75519d35984c35","impliedFormat":99},{"version":"abbb31e3da98902306359386224021bfb6cfa2496c89bbbde7ee2065cf58297c","impliedFormat":99},{"version":"eb77a8615b87a807171bc0a69a1b3c3d69db190a5f243c0dac2c5acc9cffba15","impliedFormat":99},{"version":"dedd673bc22ab642bdcdd5b3dccb47cf6637c3b44030c8e4d9b4ea2b201e7fcc","impliedFormat":99},{"version":"d7dfcb039ff9cff38ccd48d2cc1ba95ca45c316670eddbcf81784e21b7128692","impliedFormat":99},{"version":"ff555c8aa0311e94f4be373b8c6de8afa506bcde3c0c271d43f870372543d1b7","impliedFormat":99},{"version":"4b16df3f2783af630f8d50fa4018a7943f7cda766371c27187d448c13eac234d","impliedFormat":99},{"version":"bb4cdbf3a34277c2c327b6f293e5bc654fb40e77fb738521c5be449682614b46","impliedFormat":99},{"version":"8ec3b354ca25fa7524ac376da4480ffb141157ed6900a830cfe40d1ab0f2162a","impliedFormat":99},{"version":"d204b9ae964f73721d593e97c54fc55f7fd67de826ce9e9f14b1e762190f23d1","impliedFormat":99},{"version":"ceb78be9831cb2646370d5149b4475bd847cf40f2f7e920760a23e4efd92ff82","impliedFormat":99},{"version":"ba900b6a4789289d426ac44e35f717aaf20773b77e457a2d90e1f3e5e54e2555","impliedFormat":99},{"version":"687208233ae7a969baa2d0c565c9f24eb4cb1e64d6cfb30f71afec9e929e58c2","impliedFormat":99},{"version":"a93c8f43b78c1d0ceb985a6edaf9e838f3f449be28e8c285ed41a0db06d96513","impliedFormat":99},{"version":"48eb83e02fb3c521253e289005adc71e6c534ff78f6b1a4365f05b8a610b4cbd","impliedFormat":99},{"version":"d8ca715cae823b37823f7457b50c5796f479c508741d95c00a145561c5224765","impliedFormat":99},{"version":"21f96085ed19d415725c5a7d665de964f8283cacef43957de10bdd0333721cc4","impliedFormat":99},{"version":"16adaba3987310c895ac5309bc36558a06d1298d1f3249ce3ba49753138a6fcc","impliedFormat":99},{"version":"66ee7e53d78fbf38cd6fc8d2e013c811e0a34b78cbf601c996d862a136fd9844","impliedFormat":99},{"version":"a10fd5d76a2aaba572bec4143a35ff58912e81f107aa9e6d97f0cd11e4f12483","impliedFormat":99},{"version":"1215f54401c4af167783d0f88f5bfb2dcb6f0dacf48495607920229a84005538","impliedFormat":99},{"version":"c2760bbe32a6a4b8277c9de119b9076d7999b37f6b6d6d1c232767eaeab752d8","impliedFormat":99},{"version":"2fe93aef0ee58eaa1b22a9b93c8d8279fe94490160703e1aabeff026591f8300","impliedFormat":99},{"version":"bbb02e695c037f84947e56da3485bb0d0da9493ed005fa59e4b3c5bc6d448529","impliedFormat":99},{"version":"17591571e53453c9b090910e074cdea8e7adc66f5b7cb0980eed48dadcc78c6f","impliedFormat":99},{"version":"326a980e72f7b9426be0805774c04838e95195b467bea2072189cefe708e9be7","impliedFormat":99},{"version":"a95b12eb19009fc8c6e834ad1641c69987ccc23bee42f2857082ae8f586bd865","impliedFormat":99},{"version":"6362a4854c52419f71f14d3fee88b3b434d1e89dcd58a970e9a82602c0fd707a","impliedFormat":99},{"version":"6019a258b041dc771fcd0a82c0b18f2430f1536e48d1132e2d36a3af7c26eb44","impliedFormat":99},{"version":"19ef2661e7980662a2e9b5417a0993186d888e9dfbac9a6f63f6204e416953fa","impliedFormat":99},{"version":"4a6c2ac831cff2d8fa846dfb010ee5f7afce3f1b9bd294298ee54fdc555f1161","impliedFormat":99},{"version":"6b7606e690f511bd1fa9218487aceb2f8693218eed5328a7af87a8f34e88936e","impliedFormat":99},{"version":"730cb342a128f5a8a036ffbd6dbc1135b623ce2100cefe1e1817bb8845bc7100","impliedFormat":99},{"version":"2537785d76c6dcf052a87d7939d56aeba4ce609c0f597225b3d995cb020eea28","impliedFormat":99},{"version":"a03645f65eec2cd03adbd7e1f03fc8e1b90d6b254d3417f4d96f01c2ed5fdfc5","impliedFormat":99},{"version":"b8d96b757c724e6f3cf3050261184b7ccedc5dcfd8a45eaca14c90767bd85aae","impliedFormat":99},{"version":"ac56b2f316b70d6a727fdbbcfa8d124bcd1798c293487acb2b27a43b5c886bb0","impliedFormat":99},{"version":"26722ba25e122ab7e11592044cf38123ea995039a66fa5cd1880f689d26e60c4","impliedFormat":99},{"version":"5ead43a727f75335fdbce4d4f658d60388dfaae3d9e96ff085a37edae70400da","impliedFormat":99},{"version":"0f9c9f7d13a5cf1c63eb56318b6ae4dfa2accef1122b2e88b5ed1c22a4f24e3b","impliedFormat":99},{"version":"215ee63b66e5019240f0353c688f0c47b34d8daad2f7940a5a00c54a42d5c24f","impliedFormat":99},{"version":"5760fc3aa599c30b4bf0fe989bea4ca7807b1017aa03e6b1be804f327f49ca39","impliedFormat":99},{"version":"02955d8d53d4492bc22b3526dcda81779df82c74f332d01b40f1c72d719f77cf","impliedFormat":99},{"version":"4d9639d3617f65bc5160864849fbeafe14ec69a582e20d83aa1a3bdaf6153c0b","impliedFormat":99},{"version":"77dabe31d44c48782c529d5c9acddc41f799bf9b424b259596131efc77355478","impliedFormat":99},{"version":"64402cc7d86189a2fd84c02aae9074b759b2358fad0438361cfe45417a552973","impliedFormat":99},{"version":"fa568f8d605595e1cffbfca3e8c8c492cf88ae2c6ed151f6c64acf0f9e8c25d8","impliedFormat":99},{"version":"c693f9c0fda89d41e7670429d30ddcda570f9ad63a7301379695916524eb6d2e","impliedFormat":99},{"version":"586623b01c4a3be4de3fce373a3d2287c4ab367ba62e793363f817ff65fd0f00","impliedFormat":99},{"version":"6b514d5159d0d189675a1d5a707ba068a6da6bc097afb2828aae0c98d8b32f08","impliedFormat":99},{"version":"39d7dbcfec85393fedc8c7cf62ee93f7e97c67605279492b085723b54ccaca8e","impliedFormat":99},{"version":"9c7a532873d37eea7d3d04a39da4783421bdbbf7f1b0a4aaa99ba121a787eb1a","impliedFormat":99},{"version":"70521b6ab0dcba37539e5303104f29b721bfb2940b2776da4cc818c07e1fefc1","affectsGlobalScope":true,"impliedFormat":1},{"version":"030e350db2525514580ed054f712ffb22d273e6bc7eddc1bb7eda1e0ba5d395e","affectsGlobalScope":true,"impliedFormat":1},{"version":"d153a11543fd884b596587ccd97aebbeed950b26933ee000f94009f1ab142848","affectsGlobalScope":true,"impliedFormat":1},{"version":"21d819c173c0cf7cc3ce57c3276e77fd9a8a01d35a06ad87158781515c9a438a","impliedFormat":1},{"version":"a79e62f1e20467e11a904399b8b18b18c0c6eea6b50c1168bf215356d5bebfaf","affectsGlobalScope":true,"impliedFormat":1},{"version":"8fa51737611c21ba3a5ac02c4e1535741d58bec67c9bdf94b1837a31c97a2263","affectsGlobalScope":true,"impliedFormat":1},{"version":"5929864ce17fba74232584d90cb721a89b7ad277220627cc97054ba15a98ea8f","impliedFormat":1},{"version":"24bd580b5743dc56402c440dc7f9a4f5d592ad7a419f25414d37a7bfe11e342b","impliedFormat":1},{"version":"25c8056edf4314820382a5fdb4bb7816999acdcb929c8f75e3f39473b87e85bc","impliedFormat":1},{"version":"c464d66b20788266e5353b48dc4aa6bc0dc4a707276df1e7152ab0c9ae21fad8","impliedFormat":1},{"version":"78d0d27c130d35c60b5e5566c9f1e5be77caf39804636bc1a40133919a949f21","impliedFormat":1},{"version":"c6fd2c5a395f2432786c9cb8deb870b9b0e8ff7e22c029954fabdd692bff6195","impliedFormat":1},{"version":"1d6e127068ea8e104a912e42fc0a110e2aa5a66a356a917a163e8cf9a65e4a75","impliedFormat":1},{"version":"5ded6427296cdf3b9542de4471d2aa8d3983671d4cac0f4bf9c637208d1ced43","impliedFormat":1},{"version":"6bdc71028db658243775263e93a7db2fd2abfce3ca569c3cca5aee6ed5eb186d","impliedFormat":1},{"version":"cadc8aced301244057c4e7e73fbcae534b0f5b12a37b150d80e5a45aa4bebcbd","impliedFormat":1},{"version":"385aab901643aa54e1c36f5ef3107913b10d1b5bb8cbcd933d4263b80a0d7f20","impliedFormat":1},{"version":"9670d44354bab9d9982eca21945686b5c24a3f893db73c0dae0fd74217a4c219","impliedFormat":1},{"version":"0b8a9268adaf4da35e7fa830c8981cfa22adbbe5b3f6f5ab91f6658899e657a7","impliedFormat":1},{"version":"11396ed8a44c02ab9798b7dca436009f866e8dae3c9c25e8c1fbc396880bf1bb","impliedFormat":1},{"version":"ba7bc87d01492633cb5a0e5da8a4a42a1c86270e7b3d2dea5d156828a84e4882","impliedFormat":1},{"version":"4893a895ea92c85345017a04ed427cbd6a1710453338df26881a6019432febdd","impliedFormat":1},{"version":"c21dc52e277bcfc75fac0436ccb75c204f9e1b3fa5e12729670910639f27343e","impliedFormat":1},{"version":"13f6f39e12b1518c6650bbb220c8985999020fe0f21d818e28f512b7771d00f9","impliedFormat":1},{"version":"9b5369969f6e7175740bf51223112ff209f94ba43ecd3bb09eefff9fd675624a","impliedFormat":1},{"version":"4fe9e626e7164748e8769bbf74b538e09607f07ed17c2f20af8d680ee49fc1da","impliedFormat":1},{"version":"24515859bc0b836719105bb6cc3d68255042a9f02a6022b3187948b204946bd2","impliedFormat":1},{"version":"ea0148f897b45a76544ae179784c95af1bd6721b8610af9ffa467a518a086a43","impliedFormat":1},{"version":"24c6a117721e606c9984335f71711877293a9651e44f59f3d21c1ea0856f9cc9","impliedFormat":1},{"version":"dd3273ead9fbde62a72949c97dbec2247ea08e0c6952e701a483d74ef92d6a17","impliedFormat":1},{"version":"405822be75ad3e4d162e07439bac80c6bcc6dbae1929e179cf467ec0b9ee4e2e","impliedFormat":1},{"version":"0db18c6e78ea846316c012478888f33c11ffadab9efd1cc8bcc12daded7a60b6","impliedFormat":1},{"version":"e61be3f894b41b7baa1fbd6a66893f2579bfad01d208b4ff61daef21493ef0a8","impliedFormat":1},{"version":"bd0532fd6556073727d28da0edfd1736417a3f9f394877b6d5ef6ad88fba1d1a","impliedFormat":1},{"version":"89167d696a849fce5ca508032aabfe901c0868f833a8625d5a9c6e861ef935d2","impliedFormat":1},{"version":"615ba88d0128ed16bf83ef8ccbb6aff05c3ee2db1cc0f89ab50a4939bfc1943f","impliedFormat":1},{"version":"a4d551dbf8746780194d550c88f26cf937caf8d56f102969a110cfaed4b06656","impliedFormat":1},{"version":"8bd86b8e8f6a6aa6c49b71e14c4ffe1211a0e97c80f08d2c8cc98838006e4b88","impliedFormat":1},{"version":"317e63deeb21ac07f3992f5b50cdca8338f10acd4fbb7257ebf56735bf52ab00","impliedFormat":1},{"version":"4732aec92b20fb28c5fe9ad99521fb59974289ed1e45aecb282616202184064f","impliedFormat":1},{"version":"2e85db9e6fd73cfa3d7f28e0ab6b55417ea18931423bd47b409a96e4a169e8e6","impliedFormat":1},{"version":"c46e079fe54c76f95c67fb89081b3e399da2c7d109e7dca8e4b58d83e332e605","impliedFormat":1},{"version":"bf67d53d168abc1298888693338cb82854bdb2e69ef83f8a0092093c2d562107","impliedFormat":1},{"version":"d2bc987ae352271d0d615a420dcf98cc886aa16b87fb2b569358c1fe0ca0773d","affectsGlobalScope":true,"impliedFormat":1},{"version":"4f0539c58717cbc8b73acb29f9e992ab5ff20adba5f9b57130691c7f9b186a4d","impliedFormat":1},{"version":"7394959e5a741b185456e1ef5d64599c36c60a323207450991e7a42e08911419","impliedFormat":1},{"version":"76103716ba397bbb61f9fa9c9090dca59f39f9047cb1352b2179c5d8e7f4e8d0","impliedFormat":1},{"version":"f9677e434b7a3b14f0a9367f9dfa1227dfe3ee661792d0085523c3191ae6a1a4","affectsGlobalScope":true,"impliedFormat":1},{"version":"4314c7a11517e221f7296b46547dbc4df047115b182f544d072bdccffa57fc72","impliedFormat":1},{"version":"115971d64632ea4742b5b115fb64ed04bcaae2c3c342f13d9ba7e3f9ee39c4e7","impliedFormat":1},{"version":"c2510f124c0293ab80b1777c44d80f812b75612f297b9857406468c0f4dafe29","affectsGlobalScope":true,"impliedFormat":1},{"version":"5524481e56c48ff486f42926778c0a3cce1cc85dc46683b92b1271865bcf015a","impliedFormat":1},{"version":"9057f224b79846e3a95baf6dad2c8103278de2b0c5eebda23fc8188171ad2398","affectsGlobalScope":true,"impliedFormat":1},{"version":"19d5f8d3930e9f99aa2c36258bf95abbe5adf7e889e6181872d1cdba7c9a7dd5","impliedFormat":1},{"version":"e6f5a38687bebe43a4cef426b69d34373ef68be9a6b1538ec0a371e69f309354","impliedFormat":1},{"version":"a6bf63d17324010ca1fbf0389cab83f93389bb0b9a01dc8a346d092f65b3605f","impliedFormat":1},{"version":"e009777bef4b023a999b2e5b9a136ff2cde37dc3f77c744a02840f05b18be8ff","impliedFormat":1},{"version":"1e0d1f8b0adfa0b0330e028c7941b5a98c08b600efe7f14d2d2a00854fb2f393","impliedFormat":1},{"version":"ee1ee365d88c4c6c0c0a5a5701d66ebc27ccd0bcfcfaa482c6e2e7fe7b98edf7","affectsGlobalScope":true,"impliedFormat":1},{"version":"88bc59b32d0d5b4e5d9632ac38edea23454057e643684c3c0b94511296f2998c","affectsGlobalScope":true,"impliedFormat":1},{"version":"8fb11e675f5cc648bc6c344e1311e36b8dfffea8bffe575bedc0e41af77eca99","impliedFormat":1},{"version":"1e289f30a48126935a5d408a91129a13a59c9b0f8c007a816f9f16ef821e144e","impliedFormat":1},{"version":"f96a023e442f02cf551b4cfe435805ccb0a7e13c81619d4da61ec835d03fe512","impliedFormat":1},{"version":"5135bdd72cc05a8192bd2e92f0914d7fc43ee077d1293dc622a049b7035a0afb","impliedFormat":1},{"version":"4f80de3a11c0d2f1329a72e92c7416b2f7eab14f67e92cac63bb4e8d01c6edc8","impliedFormat":1},{"version":"6d386bc0d7f3afa1d401afc3e00ed6b09205a354a9795196caed937494a713e6","impliedFormat":1},{"version":"f579f267a2f4c2278cca2ec84613e95059368b503ce96586972d304e5e40125b","affectsGlobalScope":true,"impliedFormat":1},{"version":"23459c1915878a7c1e86e8bdb9c187cddd3aea105b8b1dfce512f093c969bc7e","impliedFormat":1},{"version":"b1b6ee0d012aeebe11d776a155d8979730440082797695fc8e2a5c326285678f","impliedFormat":1},{"version":"45875bcae57270aeb3ebc73a5e3fb4c7b9d91d6b045f107c1d8513c28ece71c0","impliedFormat":1},{"version":"1dc73f8854e5c4506131c4d95b3a6c24d0c80336d3758e95110f4c7b5cb16397","affectsGlobalScope":true,"impliedFormat":1},{"version":"5f6f1d54779d0b9ed152b0516b0958cd34889764c1190434bbf18e7a8bb884cd","affectsGlobalScope":true,"impliedFormat":1},{"version":"3f16a7e4deafa527ed9995a772bb380eb7d3c2c0fd4ae178c5263ed18394db2c","impliedFormat":1},{"version":"c6b4e0a02545304935ecbf7de7a8e056a31bb50939b5b321c9d50a405b5a0bba","impliedFormat":1},{"version":"fab29e6d649aa074a6b91e3bdf2bff484934a46067f6ee97a30fcd9762ae2213","impliedFormat":1},{"version":"8145e07aad6da5f23f2fcd8c8e4c5c13fb26ee986a79d03b0829b8fce152d8b2","impliedFormat":1},{"version":"e1120271ebbc9952fdc7b2dd3e145560e52e06956345e6fdf91d70ca4886464f","impliedFormat":1},{"version":"814118df420c4e38fe5ae1b9a3bafb6e9c2aa40838e528cde908381867be6466","impliedFormat":1},{"version":"f7b1df115dbd1b8522cba4f404a9f4fdcd5169e2137129187ffeee9d287e4fd1","impliedFormat":1},{"version":"c878f74b6d10b267f6075c51ac1d8becd15b4aa6a58f79c0cfe3b24908357f60","impliedFormat":1},{"version":"37ba7b45141a45ce6e80e66f2a96c8a5ab1bcef0fc2d0f56bb58df96ec67e972","impliedFormat":1},{"version":"125d792ec6c0c0f657d758055c494301cc5fdb327d9d9d5960b3f129aff76093","impliedFormat":1},{"version":"fbf68fc8057932b1c30107ebc37420f8d8dc4bef1253c4c2f9e141886c0df5ab","affectsGlobalScope":true,"impliedFormat":1},{"version":"2754d8221d77c7b382096651925eb476f1066b3348da4b73fe71ced7801edada","impliedFormat":1},{"version":"993985beef40c7d113f6dd8f0ba26eed63028b691fbfeb6a5b63f26408dd2c6d","affectsGlobalScope":true,"impliedFormat":1},{"version":"bef91efa0baea5d0e0f0f27b574a8bc100ce62a6d7e70220a0d58af6acab5e89","affectsGlobalScope":true,"impliedFormat":1},{"version":"282fd2a1268a25345b830497b4b7bf5037a5e04f6a9c44c840cb605e19fea841","impliedFormat":1},{"version":"5360a27d3ebca11b224d7d3e38e3e2c63f8290cb1fcf6c3610401898f8e68bc3","impliedFormat":1},{"version":"66ba1b2c3e3a3644a1011cd530fb444a96b1b2dfe2f5e837a002d41a1a799e60","impliedFormat":1},{"version":"7e514f5b852fdbc166b539fdd1f4e9114f29911592a5eb10a94bb3a13ccac3c4","impliedFormat":1},{"version":"7d6ff413e198d25639f9f01f16673e7df4e4bd2875a42455afd4ecc02ef156da","affectsGlobalScope":true,"impliedFormat":1},{"version":"cb094bb347d7df3380299eb69836c2c8758626ecf45917577707c03cf816b6f4","affectsGlobalScope":true,"impliedFormat":1},{"version":"f689c4237b70ae6be5f0e4180e8833f34ace40529d1acc0676ab8fb8f70457d7","impliedFormat":1},{"version":"b02784111b3fc9c38590cd4339ff8718f9329a6f4d3fd66e9744a1dcd1d7e191","impliedFormat":1},{"version":"ac5ed35e649cdd8143131964336ab9076937fa91802ec760b3ea63b59175c10a","impliedFormat":1},{"version":"52a8e7e8a1454b6d1b5ad428efae3870ffc56f2c02d923467f2940c454aa9aec","affectsGlobalScope":true,"impliedFormat":1},{"version":"78dc0513cc4f1642906b74dda42146bcbd9df7401717d6e89ea6d72d12ecb539","impliedFormat":1},{"version":"ad90122e1cb599b3bc06a11710eb5489101be678f2920f2322b0ac3e195af78d","impliedFormat":1},{"version":"d18f13c33148de7f0b1241734cb10dfe4c1e9505acad51ee48c3f4c1bd09e0dd","impliedFormat":1},{"version":"99c9eac0d608f6969facd091a4d0a67f3c7d14c906cd079acaf62ab9443aca93","affectsGlobalScope":true,"impliedFormat":1},{"version":"1dadc7e844c1dfc84ed37626dc8aac1d78600f39db67d2ffe8c255c2c7ac8fd5","impliedFormat":1},{"version":"8fd47acbd61d016de5ca0ffa4ba6f128a0ade0b4aca805e90b70e42b256d00b6","impliedFormat":1},{"version":"73009b9cc68e0bb850eed4396ddba13dcb9fdb39373d4d4df48c5cc60e3a5d75","impliedFormat":1},{"version":"37be812b06e518320ba82e2aff3ac2ca37370a9df917db708f081b9043fa3315","impliedFormat":1},{"version":"1a2a036dd0b17d8a41629907d9fd0f45d68d48d274bbdfc7adca29df2e4f1f14","impliedFormat":1},{"version":"c874a66a6b151b1efe71602c5422e2a74d2dfd53313901980c33d68b91d1b483","affectsGlobalScope":true,"impliedFormat":1},{"version":"56cf860a43f3ef99f520b45c8b629ec0b1cbb5c6a33bd6787cff38b6e86092ec","impliedFormat":1},{"version":"8d81acbd0aacf4eabce2581851b0106803238e3f32981b371ec890f5d0c7c525","affectsGlobalScope":true,"impliedFormat":1},{"version":"1181e359ac0ae3aa0159cd3323b5a872eab9f609cecba241baeb1d74189fa048","impliedFormat":1},{"version":"d49b86c7b9ad54494edb727b467647f95df1a981248e1b991cded644808851b9","impliedFormat":1},{"version":"2adfd89fd1eeed09791463f83eb978b838d8eeb435c61ce52b8226f861609fa2","affectsGlobalScope":true,"impliedFormat":1},{"version":"b05b9ef20d18697e468c3ae9cecfff3f47e8976f9522d067047e3f236db06a41","affectsGlobalScope":true,"impliedFormat":1},{"version":"8f935d8b76bc258fb9a966578fff2229c582a47860e76f24d0816adc2dc07e65","affectsGlobalScope":true,"impliedFormat":1},{"version":"1745f0b1ab53f414b4f8ebb2c6a902fda28d40f454edac8e92b4d7c974a2051c","affectsGlobalScope":true,"impliedFormat":1},{"version":"067f76ab5254b1bdfc94154730b7a30c12e3aad8b9d04ec62c0d6b7a1f40ea0e","affectsGlobalScope":true,"impliedFormat":1},{"version":"76bf438aa034211ecbfceafe13cc259a823f107827862e8d1bc8b0ff5dce2261","affectsGlobalScope":true,"impliedFormat":1},{"version":"7d604c1d876ef8b7fec441cf799296fd0d8f66844cf2232d82cf36eb2ddff8fe","impliedFormat":99},{"version":"861596a3b58ade9e9733374bd6b45e5833b8b80fd2eb9fe504368fc8f73ae257","impliedFormat":99},{"version":"a3da7cf20826f3344ad9a8a56da040186a1531cace94e2788a2db795f277df94","impliedFormat":99},{"version":"d138b4abf9e543f751a62d547edc2a5ad5acda445bd7a3425e921b0d9b34499b","impliedFormat":99},{"version":"b30dd19724b5768f8adf0435c6c5cb63cbbca646b8af93610c7cdab0a4937863","impliedFormat":99},{"version":"b0e4fa9c48065ca7b25e6da1ebd03c2eecb1aee64a9f120572c315e8d13b86ce","impliedFormat":99},{"version":"62df21e26bfd13b36ef3cf329b1ac5113260879a6664632e35c98cc81717b6b1","impliedFormat":99},{"version":"42e7705cb067671bea6f5731a5625fa693b4c6da97f2991cbd7463f4fcabe905","impliedFormat":99},{"version":"cde02dd4dc73dd87fcb4a264c0f9fbec3694c70edaf21c8e64a14c716f7cd026","impliedFormat":99},{"version":"d4066ba263b829f8fc098b6ae66eaa476a585dbd965852026949d41bd5b5e389","impliedFormat":99},{"version":"6d3496cac1c65b8a645ecbb3e45ec678dd4d39ce360eecbcb6806a33e3d9a7ae","impliedFormat":99},{"version":"0ac65be7403ce06c6a022173bf4d1ee0be39941cd177daef478c0aced9465c54","impliedFormat":99},{"version":"0a7da46f869d7783766a1b220b911be983b6e1a225b320f587f1265784aecd2b","impliedFormat":99},{"version":"e7d718d2641367879862c2183a715e32dfb9894cce94a170ac152185d603adad","impliedFormat":99},{"version":"233c107a5721c5a695574abe07afc1d7e106a5e93ea9cd841c846ab436a6ca26","impliedFormat":99},{"version":"de24a6825606e79c913a702d7114e38055d823078c9fe9018a1a9c3bf558e9dd","impliedFormat":99},{"version":"4b3e103eca50f82c683a1fe18d54edd916726e3b6f767ef0a80d601e86b82196","impliedFormat":99},{"version":"687208233ae7a969baa2d0c565c9f24eb4cb1e64d6cfb30f71afec9e929e58c2","impliedFormat":99},{"version":"64160c7bf8113edfed4418df42c0ce2884d101e3eb0a2e3b8168042469e4153e","impliedFormat":99},{"version":"442f6a9e83bb7d79ff61877dc5f221eea37f1d8609d8848dfbc6228ebc7a8e90","impliedFormat":99},{"version":"ecc8f3ef3a4ef382960b2c83291ce4d7ebbb6fed0854ecb7103b4cf9fde232f9","impliedFormat":99},{"version":"2bb6668c450ae4cdf3e269da0a513db4c32a5d905afa8d4601f58f5e932368b0","impliedFormat":99},{"version":"9ac718f694ba940c697391db374e17c887d55c1c722ee5dbd2f2b0050a9f7451","impliedFormat":99},{"version":"5b1d323982717499784bb63fd87068e920a4434c03247d9a65fd03f57ecff760","impliedFormat":99},{"version":"ddc2fa829da5bb65090972e70110c07f41c1fa0853025f2fbd8667fb5126b70e","impliedFormat":99},{"version":"4a64e8b53347b50b49ed370bbf94212a648c1f7b807ede22eec9200c72f4f700","impliedFormat":99},{"version":"304bdcbcdd952d6b9f5a5b0b2840258ad02a04dd1eb3891f6bfe35ed8408b48d","impliedFormat":99},{"version":"0609857dba37ed81485265c1f8f04100db028772ca2f48a80ea45c8ecfc3b88d","impliedFormat":99},{"version":"fa910f88f55844718a277ee9519206abce66629de2692676c3e2ad1c9278bdfd","impliedFormat":99},{"version":"b9bfbc9537a33509b840636acbb8fd382231d361af5df63bddb00323085feac7","impliedFormat":99},{"version":"9ae87bd743e93b6384efbfa306bde1fa70b6ff27533983e1e1fe08a4ef7037b8","impliedFormat":99},{"version":"5f7c0a4aad7a3406db65d674a5de9e36e0d08773f638b0f49d70e441de7127c0","impliedFormat":99},{"version":"9ff20263878ae6e03175720b68f2de7b031d7dd912ee358bfe8e88387988aefd","impliedFormat":99},{"version":"649d93da3a0aeb4e24fbcc1b73f17cf6bd8d077e87467c19c7216b88a34c72e4","impliedFormat":99},{"version":"40d98c09457df9770e89c6a0ee0566b366a1bb30b684400072804fb65c7506f1","impliedFormat":99},{"version":"27a051f366c2170613e8f9e25e0a01b8604212bb1c50f9dbfd9f466f34597a5a","impliedFormat":99},{"version":"136ebb29913d09adabd249ff94d6a460899162554dc60a73251da2c001e69943","impliedFormat":99},{"version":"5a314957a17116e1f8ccf329b148d6015d1b87395375c7d75ae4228373888fc0","impliedFormat":99},{"version":"808ce60a84c24f59c5ed8bf7e4b0da3e83b3bbe5b30211ee6196068cd68b35ff","impliedFormat":99},{"version":"4d9366e5098bf8ed0f4b01e7a322590ce7b674415feb2d27f7f70914614334f6","impliedFormat":99},{"version":"b5ea27f19a54feca5621f5ba36a51026128ea98e7777e5d47f08b79637527cf5","impliedFormat":99},{"version":"0e81c8ec7948bf4e68bfdd5fff7ce3e7f4dc61a27ca5144c6b101ffaec5dab88","impliedFormat":99},{"version":"185e69d5e17ff501ca804c556f391d5997f3580ad7453c3e6266a9cf6839b2b4","impliedFormat":99},{"version":"0479cfa5df9fe263dee243dec91d2e6d5f845c7f32a892d6cc676f6d69d505b3","impliedFormat":99},{"version":"360c62f0ec06dca7aca712539a13fdc0480c560122687773a6387fec7952ee52","impliedFormat":99},{"version":"97dc280aeb90a3d35d4b3634da448e1f91aa63168c259c3ada18e4e8213224d3","impliedFormat":99},{"version":"724dee6696653bf62b88e2381b366970593526429d53e744f4d60acdb96ea92b","impliedFormat":99},{"version":"a4176293471fa4d5999984d0384478c978e6ec6dece2338b96f0594634567dac","impliedFormat":99},{"version":"96e8e86da9cad31f9624778189e03758797aa9f97ce9a27229ccf964130aca8d","impliedFormat":99},{"version":"7f60833611f62d51f334dffef1e0fad4bbdcc97efddf6b6ad9aeb91791657b80","impliedFormat":99},{"version":"76780da41d426ce012c3cda6df85db993a1655643b3713ed9d9120f22684d676","impliedFormat":99},{"version":"b92f4897492b64c40c51c952f3001ef4e55e5ef6a241379876f564548c2fca3e","impliedFormat":99},{"version":"61355d10837926382a97c340e37f9469438210e9ca5f1a48ebcbc28321f39981","impliedFormat":99},{"version":"492e3546e97dfbdc974923ff81af2af4fa37903c00049b453c413e2deef81096","impliedFormat":99},{"version":"7c2915897a1cd2069b317c9e3e6d631f6afc11126ab4d095babc3ade8bffdfb8","impliedFormat":99},{"version":"d14f1d9a065c1b2c99b36c462b1caab4cae1ec1cae681d27b63d2ce9169d8155","impliedFormat":99},{"version":"fdc898b76ffc11aecdd28a3f81d723415957f8cb9aee43ecc5a411d059c59192","impliedFormat":99},{"version":"b5853a47224b03580fc1f8138c27edec0a81fc57b78d7cc758f1878ad748629e","impliedFormat":99},{"version":"e177af35cccc39cc974fa44e91596da3adaf04a34a7fce3e9d05f92078f426e5","impliedFormat":99},{"version":"8d9419a9822f6bb08af27e213d65b21e95bf50540deaf83656c6c18770d17212","impliedFormat":99},{"version":"4d505d8953ed4da9f3b67478d224202a73fb3239c43fa6ab01e6a32158ada809","impliedFormat":99},{"version":"67850def38c15e75a4eda7e86829f314311379826042f17f02e178ad16a343fd","impliedFormat":99},{"version":"937e6154fd0b0675b18f759f0c5a716f54da18e49ead6d009d294cab4c3881be","impliedFormat":99},{"version":"cb5743b14e08d0008dcd17daa79a4d9ff15b14d8857842cbb7d91c88c9c4c518","impliedFormat":99},{"version":"08e3464675ebdcb67b9f7af2ce06b5e1786604ddfc14f9e3189c7734cfbdb902","impliedFormat":99},{"version":"f0df3683edf202ceef0b9964de4df84c93ca043343e901e63c407639806ad06a","impliedFormat":99},{"version":"d357c3af0fd6b09fa92128bb4414fcbac5f18ec789ce8597cf67fd4004bac69f","impliedFormat":99},{"version":"b96a65571cad0904da48174afa8328501af52cdc77765f7a644c2048077a7175","impliedFormat":99},{"version":"0d3fb1bcca92eb34089c81883b2d6e755630177b2d5ebffdddd1d91a056c44d7","impliedFormat":99},{"version":"3ed2a5eba8a85d7bd0d5e7ee46caf12c75ed3e449ccbab1f269a902e5feb65eb","impliedFormat":99},{"version":"bc14cb4f3868dab2a0293f54a8fe10aa23c0428f37aece586270e35631dd6b67","impliedFormat":99},{"version":"0878c9f800aefa9831f400f7bd2c3e381d23f5d53998e388e8174f30021b63e3","impliedFormat":99},{"version":"a589f9f052276a3fc00b75e62f73b93ea568fce3e935b86ed7052945f99d9dc2","impliedFormat":1},{"version":"17230b34bb564a3a2e36f9d3985372ccab4ad1722df2c43f7c5c2b553f68e5db","impliedFormat":1},{"version":"6e5c9272f6b3783be7bdddaf207cccdb8e033be3d14c5beacc03ae9d27d50929","impliedFormat":1},{"version":"9b4f7ff9681448c72abe38ea8eefd7ffe0c3aefe495137f02012a08801373f71","impliedFormat":1},{"version":"0dfe35191a04e8f9dc7caeb9f52f2ee07402736563d12cbccd15fb5f31ac877f","impliedFormat":1},{"version":"c21e3729094ed9ecdcb97724ce5b20625bb9ac3b9146d681cafa97d667c12bb5","impliedFormat":1},{"version":"de8594a1de0b2cd1e7dca5c761c0fc06649052773357f534e71f28163008c8fc","impliedFormat":99},{"version":"c10ff6098b5ddfd92d06117b9e006f79195f7386dab7492d8685f989656d5dfb","impliedFormat":99},{"version":"2fac70f99da22181acfda399eed248b47395a8eeb33c9c82d75ca966aee58912","impliedFormat":99},{"version":"8e609bb71c20b858c77f0e9f90bb1319db8477b13f9f965f1a1e18524bf50881","impliedFormat":1},{"version":"ed22d254ecd396a9d8aa907bf2ba4190f066869c4e69484cbff7af9f071b67dd","signature":"94ffc3bc08c4ff6dc8930fe349085802716bee2939499f25b7178bab9d481562"},{"version":"7cb87914b6615d56dfe151fb0fbd6b672e0b1b664b132fc5052e606de17a4b45","signature":"1e935599ce0c078efe4ce6db6b1299c96b0a39259f19496a4078af91a3d27e95"},{"version":"281288b72cd57c88c7716a50aeea5aca3afb7813326ab48015595ac5d8578fc5","impliedFormat":99},{"version":"81000e75ac2f2e5a4c8173a47d93afb46aabeba8e042193ab96f99515973d561","signature":"4ffc694a13cfb6aa43e3926e1d8e05ded8727af2e95835063c1d98e75c5d7ad6"},{"version":"d50ab0815120231ab511558a753c33b2806b42cabe006356fb0bb763fc30e865","impliedFormat":1},{"version":"2c8e55457aaf4902941dfdba4061935922e8ee6e120539c9801cd7b400fae050","impliedFormat":1},{"version":"32ddc6ad753ae79571bbf28cebff7a383bf7f562ac5ef5d25c94ef7f71609d49","impliedFormat":1},{"version":"670a76db379b27c8ff42f1ba927828a22862e2ab0b0908e38b671f0e912cc5ed","impliedFormat":1},{"version":"81df92841a7a12d551fcbc7e4e83dbb7d54e0c73f33a82162d13e9ae89700079","impliedFormat":1},{"version":"069bebfee29864e3955378107e243508b163e77ab10de6a5ee03ae06939f0bb9","impliedFormat":1},{"version":"e2b48abff5a8adc6bb1cd13a702b9ef05e6045a98e7cfa95a8779b53b6d0e69d","impliedFormat":1},{"version":"f3d8c757e148ad968f0d98697987db363070abada5f503da3c06aefd9d4248c1","impliedFormat":1},{"version":"36a2e4c9a67439aca5f91bb304611d5ae6e20d420503e96c230cf8fcdc948d94","affectsGlobalScope":true,"impliedFormat":1},{"version":"8a8eb4ebffd85e589a1cc7c178e291626c359543403d58c9cd22b81fab5b1fb9","impliedFormat":1},{"version":"9d37372c385ea35087857d10afe0ae636503035feee2f742c4031c3658b17d80","impliedFormat":1},{"version":"115b2ad73fa7d175cd71a5873d984c21593b2a022f1a2036cc39d9f53629e5dc","impliedFormat":1}],"root":[384,385,387],"options":{"composite":true,"declaration":true,"esModuleInterop":true,"module":99,"outDir":"./dist","rootDir":"./src","skipLibCheck":true,"sourceMap":true,"strict":true,"target":99},"referencedMap":[[390,1],[388,2],[393,3],[389,1],[391,4],[392,1],[289,5],[394,2],[395,2],[230,6],[231,6],[232,7],[191,8],[233,9],[234,10],[235,11],[186,2],[189,12],[187,2],[188,2],[236,13],[237,14],[238,15],[239,16],[240,17],[241,18],[242,18],[244,19],[243,20],[245,21],[246,22],[247,23],[229,24],[190,2],[248,25],[249,26],[250,27],[283,28],[251,29],[252,30],[253,31],[254,32],[255,33],[256,34],[257,35],[258,36],[259,37],[260,38],[261,38],[262,39],[263,2],[264,2],[265,40],[267,41],[266,42],[268,43],[269,44],[270,45],[271,46],[272,47],[273,48],[274,49],[275,50],[276,51],[277,52],[278,53],[279,54],[280,55],[281,56],[282,57],[379,58],[399,59],[396,2],[398,60],[284,61],[288,62],[300,2],[299,63],[291,64],[290,2],[287,65],[292,2],[285,66],[293,2],[301,67],[294,2],[298,68],[286,69],[295,2],[296,2],[297,70],[397,2],[383,2],[126,71],[334,72],[87,73],[79,2],[127,74],[128,75],[131,76],[80,74],[81,2],[153,77],[88,78],[95,79],[96,79],[97,79],[98,80],[94,81],[99,82],[114,79],[100,83],[101,83],[102,79],[103,79],[104,80],[105,79],[120,84],[106,79],[107,79],[108,85],[109,79],[110,79],[111,85],[112,80],[113,79],[115,86],[116,85],[117,79],[118,80],[119,79],[148,87],[141,88],[93,89],[156,90],[89,91],[90,89],[137,92],[146,93],[140,94],[145,95],[147,96],[144,97],[152,98],[139,99],[154,100],[149,101],[142,102],[92,103],[91,89],[155,104],[143,105],[150,2],[151,106],[381,107],[382,108],[386,109],[380,110],[84,111],[173,112],[157,113],[336,114],[337,115],[338,115],[339,116],[340,115],[160,117],[341,118],[342,119],[343,120],[344,115],[179,121],[369,122],[345,115],[335,123],[346,114],[348,124],[349,125],[350,125],[351,116],[352,115],[353,115],[354,125],[355,116],[356,116],[357,125],[358,115],[359,114],[360,115],[361,116],[362,126],[347,127],[363,115],[364,116],[365,115],[366,115],[367,115],[368,115],[373,128],[370,129],[158,130],[185,131],[159,132],[161,130],[174,133],[178,134],[176,135],[169,136],[371,137],[372,138],[177,139],[168,140],[172,141],[175,142],[181,143],[180,74],[167,144],[165,102],[163,145],[162,130],[182,146],[183,2],[184,147],[164,105],[170,2],[171,148],[135,149],[136,150],[129,74],[125,151],[138,152],[166,153],[121,154],[123,155],[122,154],[124,154],[133,156],[132,157],[134,158],[86,159],[332,160],[302,161],[309,162],[308,163],[310,164],[330,165],[326,166],[327,167],[328,167],[329,168],[313,169],[320,170],[307,171],[333,172],[303,173],[304,171],[316,174],[319,175],[318,176],[323,177],[312,178],[314,179],[322,180],[331,181],[317,182],[315,183],[311,102],[306,184],[305,185],[325,186],[321,105],[324,187],[85,105],[83,188],[82,189],[130,2],[378,190],[375,191],[377,192],[376,2],[374,2],[77,2],[78,2],[14,2],[13,2],[2,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[21,2],[22,2],[3,2],[23,2],[24,2],[4,2],[25,2],[29,2],[26,2],[27,2],[28,2],[30,2],[31,2],[32,2],[5,2],[33,2],[34,2],[35,2],[36,2],[6,2],[40,2],[37,2],[38,2],[39,2],[41,2],[7,2],[42,2],[47,2],[48,2],[43,2],[44,2],[45,2],[46,2],[8,2],[52,2],[49,2],[50,2],[51,2],[53,2],[9,2],[54,2],[55,2],[56,2],[58,2],[57,2],[59,2],[60,2],[10,2],[61,2],[62,2],[63,2],[11,2],[64,2],[65,2],[66,2],[67,2],[68,2],[1,2],[69,2],[70,2],[12,2],[74,2],[72,2],[76,2],[71,2],[75,2],[73,2],[207,193],[217,194],[206,193],[227,195],[198,196],[197,197],[226,191],[220,198],[225,199],[200,200],[214,201],[199,202],[223,203],[195,204],[194,191],[224,205],[196,206],[201,207],[202,2],[205,207],[192,2],[228,208],[218,209],[209,210],[210,211],[212,212],[208,213],[211,214],[221,191],[203,215],[204,216],[213,217],[193,218],[216,209],[215,207],[219,2],[222,219],[385,220],[387,221],[384,222]],"latestChangedDtsFile":"./dist/migrate.d.ts","version":"5.8.2"}
</file>

<file path=".gitignore">
.env
.env.development.local
</file>

<file path="docker-compose.yml">
services:
  db:
    image: postgres:17-alpine
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-drizzle_user}         # Use env var or default
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drizzle_password} # Use env var or default
      POSTGRES_DB: ${POSTGRES_DB:-auth_db}             # Use env var or default (changed name slightly)
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data
    networks:
      - authnet

volumes:
  postgres_data:

networks:
  authnet:
    driver: bridge
</file>

<file path="README.md">
# auth-monorepo

To install dependencies:

```bash
bun install
```

To run:

```bash
bun run index.ts
```

This project was created using `bun init` in bun v1.2.0. [Bun](https://bun.sh) is a fast all-in-one JavaScript runtime.
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    // Enable latest features
    "lib": ["ESNext", "DOM"],
    "target": "ESNext",
    "module": "ESNext",
    "moduleDetection": "force",
    "jsx": "react-jsx",
    "allowJs": true,

    // Bundler mode
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "noEmit": true,

    // Best practices
    "strict": true,
    "skipLibCheck": true,
    "noFallthroughCasesInSwitch": true,

    // Some stricter flags (disabled by default)
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "noPropertyAccessFromIndexSignature": false
  }
}
</file>

<file path="apps/auth-server/auth/index.ts">
import { Hono } from "hono";
import { issuer } from "@openauthjs/openauth"; // Correct import
import { CodeUI } from "@openauthjs/openauth/ui/code";
import { CodeProvider } from "@openauthjs/openauth/provider/code";
import { MemoryStorage } from "@openauthjs/openauth/storage/memory";
import { object, string } from "valibot";
import { createSubjects } from "@openauthjs/openauth/subject";
import { db, schema, testDbConnection } from "@auth-monorepo/database";
import { eq } from "drizzle-orm";
import "dotenv/config";
import { cors } from "hono/cors";

// --- Test DB Connection ---
testDbConnection().catch((err) => {
  console.error("FATAL: Database connection failed on startup.", err);
  process.exit(1);
});
// --- ---

// --- Subjects Definition ---
const subjects = createSubjects({
  user: object({
    id: string(),
    email: string(),
  }),
});
// --- ---

// --- Database User Logic (getUser function as before) ---
async function getUser(email: string): Promise<{ id: string; email: string }> {
  const existingUser = await db.query.users.findFirst({
    where: eq(schema.users.email, email),
  });
  if (existingUser) {
    console.log(
      `[Auth] Found existing user: ${email} (ID: ${existingUser.id})`
    );
    return { id: existingUser.id, email: existingUser.email };
  }
  console.log(`[Auth] Creating new user: ${email}`);
  try {
    const newUserResult = await db
      .insert(schema.users)
      .values({ email: email })
      .returning({ id: schema.users.id, email: schema.users.email });
    if (!newUserResult || newUserResult.length === 0) {
      throw new Error(
        `[Auth] Failed to retrieve created user data for email: ${email}`
      );
    }
    const newUser = newUserResult[0];
    if (!newUser) {
      throw new Error(
        `[Auth] Failed to create user (no user returned) for email: ${email}`
      );
    }
    console.log(
      `[Auth] Created new user: ${newUser.email} (ID: ${newUser.id})`
    );
    return newUser;
  } catch (error: any) {
    console.error(`[Auth] Error creating user for email ${email}:`, error);
    if (error.code === "23505") {
      console.warn(
        `[Auth] Race condition? User ${email} created concurrently. Refetching...`
      );
      const refetchedUser = await db.query.users.findFirst({
        where: eq(schema.users.email, email),
      });
      if (refetchedUser)
        return { id: refetchedUser.id, email: refetchedUser.email };
    }
    throw new Error(
      `[Auth] Failed to create/retrieve user for email: ${email}`
    );
  }
}
// --- ---

// --- Create OpenAuthJS Issuer App ---
// issuer() function returns the configured Hono app directly
const authApp = issuer({
  // This IS the Hono app
  subjects,
  storage: MemoryStorage(),
  providers: {
    code: CodeProvider(
      CodeUI({
        sendCode: async (email, code) => {
          console.log(`[Auth] Login code for ${email}: ${code}`);
        },
      })
    ),
  },
  success: async (ctx, value) => {
    if (value.provider === "code") {
      const email = value.claims.email as string | undefined;
      if (!email) {
        console.error(
          "[Auth] Success callback error: Email claim missing.",
          value.claims
        );
        throw new Error("Email claim missing after code authentication");
      }
      const user = await getUser(email);
      console.log(`[Auth] Issuing subject for user: ${user.email}`);
      return ctx.subject("user", {
        // Use the responder context 'ctx'
        id: user.id,
        email: user.email,
      });
    }
    throw new Error("[Auth] Success callback error: Invalid provider.");
  },
  // Optional: Add theme, ttl, allow, select configs here if needed based on docs
});
// --- ---

// --- Create Main Hono Wrapper App (Optional but good practice for CORS/other middleware) ---
const app = new Hono();
// --- ---

// --- CORS Middleware ---
// Apply CORS specifically to the /auth path before mounting the authApp
app.use(
  "/auth/*",
  cors({
    origin: (origin) => {
      // Allow specific frontend origins
      const allowedOrigins = ["http://localhost:5173", "http://127.0.0.1:5173"];
      return allowedOrigins.includes(origin) ? origin : null; // Return null to block others
    },
    allowMethods: ["GET", "POST", "OPTIONS"],
    allowHeaders: ["Content-Type", "Authorization"],
    credentials: true,
    maxAge: 86400,
  })
);
// --- ---

// --- Mount OpenAuthJS Routes ---
app.route("/auth", authApp); // Mount the app returned by issuer()
// --- ---

// --- Health Check ---
app.get("/", (c) => c.json({ status: "ok", service: "auth-server-wrapper" }));
// --- ---

// --- Export for Bun ---
export default {
  port: 3001,
  fetch: app.fetch, // Export the fetch handler of the *wrapper* app
};
// --- ---
</file>

<file path="apps/auth-server/.gitignore">
# dependencies (bun install)
node_modules

# output
out
dist
*.tgz

# code coverage
coverage
*.lcov

# logs
logs
_.log
report.[0-9]_.[0-9]_.[0-9]_.[0-9]_.json

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# caches
.eslintcache
.cache
*.tsbuildinfo

# IntelliJ based IDEs
.idea

# Finder (MacOS) folder config
.DS_Store
</file>

<file path="apps/auth-server/package.json">
{
  "name": "hono-openauth",
  "type": "module",
  "private": true,
  "scripts": {
    "dev": "bun run --hot auth/index.ts",
    "start": "bun run index.ts"
  },
  "devDependencies": {
    "@types/bun": "latest"
  },
  "peerDependencies": {
    "typescript": "^5"
  },
  "dependencies": {
    "@auth-monorepo/database": "workspace:*",
    "@openauthjs/openauth": "^0.4.3",
    "bun-types": "^1.2.7",
    "hono": "^4.7.5",
    "valibot": "^1.0.0"
  }
}
</file>

<file path="apps/auth-server/README.md">
# hono-openauth

To install dependencies:

```bash
bun install
```

To run:

```bash
bun run index.ts
```

This project was created using `bun init` in bun v1.2.7. [Bun](https://bun.sh) is a fast all-in-one JavaScript runtime.
</file>

<file path="apps/auth-server/tsconfig.json">
{
  "compilerOptions": {
    // Environment setup & latest features
    "lib": ["ESNext"],
    "target": "ESNext",
    "module": "ESNext",
    "moduleDetection": "force",
    "jsx": "react-jsx",
    "allowJs": true,

    // Bundler mode
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "noEmit": true,

    // Best practices
    "strict": true,
    "skipLibCheck": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedIndexedAccess": true,

    // Some stricter flags (disabled by default)
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "noPropertyAccessFromIndexSignature": false
  }
}
</file>

<file path="apps/frontend/public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="apps/frontend/src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="apps/frontend/src/App.css">
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
</file>

<file path="apps/frontend/src/App.tsx">
import { useEffect, useState, useRef } from "react";
import reactLogo from "./assets/react.svg";
import viteLogo from "/vite.svg";
import "./App.css";
import { createClient, Challenge } from "@openauthjs/openauth/client"; // Import Challenge type if using PKCE

// --- Configuration ---
const AUTH_ISSUER_URL = "http://localhost:3001/auth"; // Base URL of the issuer mounted path

// Redirect URI: Where the user is sent back *TO* after authentication.
// Must be consistent between authorize and exchange.
// Using root path is common for SPAs handling callback on any page load via useEffect.
const REDIRECT_URI = window.location.origin + "/";
// --- ---

// --- OpenAuth Client ---
const client = createClient({
  // clientID: Required by createClient according to ClientInput docs
  clientID: "frontend-app",
  // issuer: Required by createClient
  issuer: AUTH_ISSUER_URL,
});
// --- ---

// --- Token Storage (localStorage) ---
// (saveTokens, clearTokens, getTokens functions remain the same)
function saveTokens(access: string, refresh?: string) {
  localStorage.setItem("access_token", access);
  if (refresh) {
    localStorage.setItem("refresh_token", refresh);
  } else {
    localStorage.removeItem("refresh_token");
  }
  console.log("[Frontend] Tokens saved to localStorage");
}
function clearTokens() {
  localStorage.removeItem("access_token");
  localStorage.removeItem("refresh_token");
  console.log("[Frontend] Tokens cleared from localStorage");
}
function getTokens(): { access: string | null; refresh: string | null } {
  return {
    access: localStorage.getItem("access_token"),
    refresh: localStorage.getItem("refresh_token"),
  };
}
// --- ---

// --- Auth Actions ---
async function login() {
  console.log("[Frontend] Initiating login (code flow)...");
  try {
    // Standard Code Flow (no PKCE for this example, add if needed)
    const { url } = await client.authorize(REDIRECT_URI, "code");
    console.log("[Frontend] Redirecting to authorization URL:", url);
    window.location.href = url;

    /* // --- PKCE Flow Example (if you want to enable it) ---
       console.log("[Frontend] Initiating login (PKCE flow)...");
       const { url, challenge } = await client.authorize(REDIRECT_URI, "code", { pkce: true });
       // Store challenge securely (sessionStorage is okay for demo)
       sessionStorage.setItem("pkce_challenge", JSON.stringify(challenge));
       console.log("[Frontend] Stored PKCE challenge:", challenge);
       console.log("[Frontend] Redirecting to authorization URL:", url);
       window.location.href = url;
    */
  } catch (error) {
    console.error("[Frontend] Error initiating authorization:", error);
  }
}

function logout() {
  console.log("[Frontend] Logging out...");
  clearTokens();
  // sessionStorage.removeItem("pkce_challenge"); // Clear PKCE challenge if used
  window.location.href = "/";
}
// --- ---

// --- React Component ---
function App() {
  const [authStatus, setAuthStatus] = useState<boolean | null>(null);
  const isHandlingCallback = useRef(false);

  useEffect(() => {
    const handleAuthFlow = async () => {
      const url = new URL(window.location.href);
      const code = url.searchParams.get("code");
      const error = url.searchParams.get("error");
      const errorDescription = url.searchParams.get("error_description");

      // --- Handle OAuth Callback ---
      if (code && !isHandlingCallback.current) {
        isHandlingCallback.current = true;
        console.log("[Frontend] Callback: Code found:", code);
        window.history.replaceState(
          {},
          document.title,
          window.location.pathname
        );

        console.log("[Frontend] Callback: Exchanging code...");
        try {
          // Standard Code Flow exchange
          const exchanged = await client.exchange(code, REDIRECT_URI);

          /* // --- PKCE Flow Exchange Example ---
              const challengeString = sessionStorage.getItem("pkce_challenge");
              if (!challengeString) {
                 throw new Error("PKCE challenge not found in sessionStorage.");
              }
              const challenge: Challenge = JSON.parse(challengeString);
              console.log("[Frontend] Callback: Using PKCE verifier:", challenge.verifier);
              const exchanged = await client.exchange(code, REDIRECT_URI, challenge.verifier);
              sessionStorage.removeItem("pkce_challenge"); // Clean up challenge
           */

          if (exchanged.err) {
            console.error(
              "[Frontend] Callback Error:",
              exchanged.err,
              exchanged.error_description
            );
            clearTokens();
            setAuthStatus(false);
          } else {
            console.log(
              "[Frontend] Callback: Exchange successful!",
              exchanged.tokens
            );
            saveTokens(exchanged.tokens.access, exchanged.tokens.refresh);
            setAuthStatus(true);
          }
        } catch (exchangeError) {
          console.error("[Frontend] Callback Critical:", exchangeError);
          clearTokens();
          setAuthStatus(false);
        } finally {
          isHandlingCallback.current = false;
        }
        return; // Handled callback
      } else if (error) {
        console.error("[Frontend] Callback Error:", error, errorDescription);
        window.history.replaceState(
          {},
          document.title,
          window.location.pathname
        );
        clearTokens();
        // sessionStorage.removeItem("pkce_challenge"); // Clear PKCE challenge if used
        setAuthStatus(false);
        return; // Handled error
      }

      // --- Handle Initial Load ---
      if (!isHandlingCallback.current && authStatus === null) {
        const { access } = getTokens();
        if (access) {
          console.log(
            "[Frontend] Initial Load: Token found. Assuming logged in."
          );
          // TODO: Verify token for real applications (check expiry, call userinfo)
          setAuthStatus(true);
        } else {
          console.log("[Frontend] Initial Load: No token found.");
          setAuthStatus(false);
        }
      }
    };

    handleAuthFlow();
  }, [authStatus]);

  // --- Render Logic (same as before) ---
  const renderContent = () => {
    if (authStatus === null) {
      return <p>Loading...</p>;
    }
    if (authStatus === true) {
      return (
        <div>
          <p>Status: Logged In</p>
          <button onClick={logout}>Logout</button>
        </div>
      );
    }
    return (
      <div>
        <p>Status: Logged Out</p>
        <button onClick={login}>Login</button>
      </div>
    );
  };
  // --- ---

  return (
    <>
      <div>
        <a href="https://vite.dev" target="_blank" rel="noreferrer">
          <img src={viteLogo} className="logo" alt="Vite logo" />
        </a>
        <a href="https://react.dev" target="_blank" rel="noreferrer">
          <img src={reactLogo} className="logo react" alt="React logo" />
        </a>
      </div>
      <h1>Vite + React + OpenAuthJS</h1>
      <div className="card">{renderContent()}</div>
      <p className="read-the-docs">Click logos to learn more</p>
    </>
  );
}

export default App;
// --- ---
</file>

<file path="apps/frontend/src/index.css">
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}
</file>

<file path="apps/frontend/src/main.tsx">
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
</file>

<file path="apps/frontend/src/vite-env.d.ts">
/// <reference types="vite/client" />
</file>

<file path="apps/frontend/.gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="apps/frontend/eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'

export default tseslint.config(
  { ignores: ['dist'] },
  {
    extends: [js.configs.recommended, ...tseslint.configs.recommended],
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
    },
  },
)
</file>

<file path="apps/frontend/index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="apps/frontend/package.json">
{
  "name": "my-app",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "bunx --bun vite",
    "build": "bunx --bun vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@openauthjs/openauth": "^0.4.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react": "^4.3.4",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "typescript": "~5.7.2",
    "typescript-eslint": "^8.24.1",
    "vite": "^6.2.0"
  }
}
</file>

<file path="apps/frontend/README.md">
# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type-aware lint rules:

```js
export default tseslint.config({
  extends: [
    // Remove ...tseslint.configs.recommended and replace with this
    ...tseslint.configs.recommendedTypeChecked,
    // Alternatively, use this for stricter rules
    ...tseslint.configs.strictTypeChecked,
    // Optionally, add this for stylistic rules
    ...tseslint.configs.stylisticTypeChecked,
  ],
  languageOptions: {
    // other options...
    parserOptions: {
      project: ['./tsconfig.node.json', './tsconfig.app.json'],
      tsconfigRootDir: import.meta.dirname,
    },
  },
})
```

You can also install [eslint-plugin-react-x](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-x) and [eslint-plugin-react-dom](https://github.com/Rel1cx/eslint-react/tree/main/packages/plugins/eslint-plugin-react-dom) for React-specific lint rules:

```js
// eslint.config.js
import reactX from 'eslint-plugin-react-x'
import reactDom from 'eslint-plugin-react-dom'

export default tseslint.config({
  plugins: {
    // Add the react-x and react-dom plugins
    'react-x': reactX,
    'react-dom': reactDom,
  },
  rules: {
    // other rules...
    // Enable its recommended typescript rules
    ...reactX.configs['recommended-typescript'].rules,
    ...reactDom.configs.recommended.rules,
  },
})
```
</file>

<file path="apps/frontend/tsconfig.app.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}
</file>

<file path="apps/frontend/tsconfig.json">
{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}
</file>

<file path="apps/frontend/tsconfig.node.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "target": "ES2022",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}
</file>

<file path="apps/frontend/vite.config.ts">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})
</file>

<file path="package.json">
{
  "name": "auth-monorepo",
  "private": true,
  "workspaces": [
    "packages/*",
    "apps/*"
  ],
  "scripts": {
    "docker:up": "docker compose up -d db",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f db",
    "db:generate": "cd packages/database && bun run db:generate",
    "db:migrate": "cd packages/database && bun run db:migrate",
    "db:studio": "cd packages/database && bun run db:studio",
    "db:build": "cd packages/database && bun run build",
    "auth:dev": "cd apps/auth-server && bun run dev",
    "frontend:dev": "cd apps/frontend && bun run dev",
    "frontend:build": "cd apps/frontend && bun run build",
    "dev": "concurrently \"bun run docker:up\" \"bun run auth:dev\" \"bun run frontend:dev\"",
    "build": "bun run db:build && bun run frontend:build"
  },
  "dependencies": {
    "concurrently": "^9.1.2"
  }
}
</file>

</files>
